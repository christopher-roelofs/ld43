digraph graphname {
n49779 [shape=box,label="(49779)\nimage.dirty = true\nimage.version ++"];
n49778 [shape=box,label="(49778)"];
n49777 [shape=box,label="(49777)"];
n49776 [shape=box,label="(49776)"];
n49775 [shape=box,label="(49775)"];
n49774 [shape=box,label="(49774)"];
n49773 [shape=box,label="(49773)\nsourcePosition = sourcePosition + 4\ndestPosition = destPosition + 4\nalphaPosition = alphaPosition + 4"];
n49772 [shape=box,label="(49772)"];
n49771 [shape=box,label="(49771)\ncast destData[destPosition] = cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast sourcePixel & cast 255"];
n49770 [shape=box,label="(49770)\ncast destData[destPosition] = cast cast cast cast cast sourcePixel & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255"];
n49769 [shape=box,label="(49769)\ncast destData[destPosition] = cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast sourcePixel & cast 255"];
n49768 [shape=box,label="(49768)\nvar destFormat = @:exhaustive destFormat\n@:cond-branch destFormat"];
n49768 -> n49769[style="dashed",color="gray",label="case 0"];
n49768 -> n49770[style="dashed",color="gray",label="case 1"];
n49768 -> n49771[style="dashed",color="gray",label="case 2"];
n49768 -> n49772[style="dashed",color="gray",label="next"];
n49767 [shape=box,label="(49767)"];
n49766 [shape=box,label="(49766)"];
n49765 [shape=box,label="(49765)"];
n49764 [shape=box,label="(49764)\nvar r = (cast cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar r = r >> 16\nvar g = (cast cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar g = g >> 16\nvar b = (cast cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar b = b >> 16\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast cast cast sourcePixel & cast 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49763 [shape=box,label="(49763)\nvar this = lime.math._RGBA.RGBA_Impl_.__alpha16\nvar tmp = cast this[cast cast cast cast cast cast sourcePixel & cast 255]\nlime.math._RGBA.RGBA_Impl_.a16 = tmp"];
n49763 -> n49764[style="dashed",color="gray",label="sub"];
n49763 -> n49765[style="dashed",color="gray",label="next"];
n49762 [shape=box,label="(49762)"];
n49761 [shape=box,label="(49761)\nsourcePixel = 0"];
n49760 [shape=box,label="(49760)\nvar tmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 255\n@:cond-branch tmp"];
n49760 -> n49763[style="dashed",color="gray",label="then"];
n49760 -> n49766[style="dashed",color="gray",label="next"];
n49759 [shape=box,label="(49759)\nvar tmp = cast cast cast sourcePixel != 0\n@:cond-branch tmp"];
n49759 -> n49761[style="dashed",color="gray",label="then"];
n49759 -> n49762[style="dashed",color="gray",label="next"];
n49758 [shape=box,label="(49758)\nvar tmp = (cast cast cast cast cast cast sourcePixel & cast 255) == 0\n@:cond-branch tmp"];
n49758 -> n49759[style="dashed",color="gray",label="then"];
n49758 -> n49760[style="dashed",color="gray",label="else"];
n49758 -> n49767[style="dashed",color="gray",label="next"];
n49757 [shape=box,label="(49757)\nvar destPremultiplied = destPremultiplied\n@:cond-branch destPremultiplied"];
n49757 -> n49758[style="dashed",color="gray",label="then"];
n49757 -> n49768[style="dashed",color="gray",label="next"];
n49756 [shape=box,label="(49756)"];
n49756 -> n49757[style="dashed",color="gray",label="sub"];
n49756 -> n49773[style="dashed",color="gray",label="next"];
n49755 [shape=box,label="(49755)\nvar value = (cast cast cast cast alphaPixel & cast 255) / 255\nvar value = (cast cast cast cast sourcePixel & cast 255) * value\nvar value = Math.round(value)\nvar sourcePixel = cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255 & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255 & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255 & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = value & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49754 [shape=box,label="(49754)"];
n49754 -> n49755[style="dashed",color="gray",label="sub"];
n49754 -> n49756[style="dashed",color="gray",label="next"];
n49753 [shape=box,label="(49753)"];
n49752 [shape=box,label="(49752)"];
n49751 [shape=box,label="(49751)"];
n49751 -> n49752[style="dashed",color="gray",label="sub"];
n49751 -> n49753[style="dashed",color="gray",label="next"];
n49750 [shape=box,label="(49750)\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n49749 [shape=box,label="(49749)\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n49748 [shape=box,label="(49748)\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n49747 [shape=box,label="(49747)\nvar alphaFormat = @:exhaustive alphaFormat\n@:cond-branch alphaFormat"];
n49747 -> n49748[style="dashed",color="gray",label="case 0"];
n49747 -> n49749[style="dashed",color="gray",label="case 1"];
n49747 -> n49750[style="dashed",color="gray",label="case 2"];
n49747 -> n49751[style="dashed",color="gray",label="next"];
n49746 [shape=box,label="(49746)"];
n49746 -> n49747[style="dashed",color="gray",label="sub"];
n49746 -> n49754[style="dashed",color="gray",label="next"];
n49745 [shape=box,label="(49745)"];
n49744 [shape=box,label="(49744)"];
n49743 [shape=box,label="(49743)"];
n49742 [shape=box,label="(49742)\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar r = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar g = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar b = cast this[idx]\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast cast cast sourcePixel & cast 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49741 [shape=box,label="(49741)\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast cast cast sourcePixel & cast 255)"];
n49741 -> n49742[style="dashed",color="gray",label="sub"];
n49741 -> n49743[style="dashed",color="gray",label="next"];
n49740 [shape=box,label="(49740)\n@:cond-branch tmp"];
n49740 -> n49741[style="dashed",color="gray",label="then"];
n49740 -> n49744[style="dashed",color="gray",label="next"];
n49739 [shape=box,label="(49739)\ntmp = false"];
n49738 [shape=box,label="(49738)\ntmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 255"];
n49737 [shape=box,label="(49737)\nvar tmp\nvar tmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 0\n@:cond-branch tmp"];
n49737 -> n49738[style="dashed",color="gray",label="then"];
n49737 -> n49739[style="dashed",color="gray",label="else"];
n49737 -> n49740[style="dashed",color="gray",label="next"];
n49736 [shape=box,label="(49736)\nvar sourcePremultiplied = sourcePremultiplied\n@:cond-branch sourcePremultiplied"];
n49736 -> n49737[style="dashed",color="gray",label="then"];
n49736 -> n49745[style="dashed",color="gray",label="next"];
n49735 [shape=box,label="(49735)\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49734 [shape=box,label="(49734)\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49733 [shape=box,label="(49733)\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49732 [shape=box,label="(49732)\nvar sourceFormat = @:exhaustive sourceFormat\n@:cond-branch sourceFormat"];
n49732 -> n49733[style="dashed",color="gray",label="case 0"];
n49732 -> n49734[style="dashed",color="gray",label="case 1"];
n49732 -> n49735[style="dashed",color="gray",label="case 2"];
n49732 -> n49736[style="dashed",color="gray",label="next"];
n49731 [shape=box,label="(49731)\n`3 = `3 + 1\nvar x = `3 - 1"];
n49731 -> n49732[style="dashed",color="gray",label="sub"];
n49731 -> n49746[style="dashed",color="gray",label="next"];
n49730 [shape=box,label="(49730)\nbreak"];
n49729 [shape=box,label="(49729)\nvar tmp = ! ((`3 < `2))\n@:cond-branch tmp"];
n49729 -> n49730[style="dashed",color="gray",label="then"];
n49729 -> n49731[style="dashed",color="gray",label="next"];
n49728 [shape=box,label="<loop-head>
(49728)"];
n49727 [shape=box,label="(49727)\nwhile ((true)) @:block 49729"];
n49727 -> n49728[style="dashed",color="gray",label="loop-head"];
n49727 -> n49729[style="dashed",color="gray",label="loop-body"];
n49727 -> n49774[style="dashed",color="gray",label="next"];
n49726 [shape=box,label="(49726)\nvar `3 = 0\nvar `2 = destView.width"];
n49726 -> n49727[style="dashed",color="gray",label="merge"];
n49725 [shape=box,label="(49725)\n`1 = `1 + 1\nvar y = `1 - 1\nvar sourceView = sourceView.byteOffset\nvar sourcePosition = sourceView.stride * y\nsourcePosition = sourceView + sourcePosition\nvar destView = destView.byteOffset\nvar destPosition = destView.stride * y\ndestPosition = destView + destPosition\nvar alphaView = alphaView.byteOffset\nvar alphaPosition = alphaView.stride * y\nalphaPosition = alphaView + alphaPosition"];
n49725 -> n49726[style="dashed",color="gray",label="sub"];
n49725 -> n49775[style="dashed",color="gray",label="next"];
n49724 [shape=box,label="(49724)\nbreak"];
n49723 [shape=box,label="(49723)\nvar tmp = ! ((`1 < `))\n@:cond-branch tmp"];
n49723 -> n49724[style="dashed",color="gray",label="then"];
n49723 -> n49725[style="dashed",color="gray",label="next"];
n49722 [shape=box,label="<loop-head>
(49722)"];
n49721 [shape=box,label="(49721)\nwhile ((true)) @:block 49723"];
n49721 -> n49722[style="dashed",color="gray",label="loop-head"];
n49721 -> n49723[style="dashed",color="gray",label="loop-body"];
n49721 -> n49776[style="dashed",color="gray",label="next"];
n49720 [shape=box,label="(49720)"];
n49719 [shape=box,label="(49719)"];
n49718 [shape=box,label="(49718)"];
n49717 [shape=box,label="(49717)\nsourcePosition = sourcePosition + 4\ndestPosition = destPosition + 4\nalphaPosition = alphaPosition + 4"];
n49716 [shape=box,label="(49716)"];
n49715 [shape=box,label="(49715)"];
n49714 [shape=box,label="(49714)\ncast destData[destPosition] = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast destPixel & cast 255"];
n49713 [shape=box,label="(49713)\ncast destData[destPosition] = cast cast cast cast cast destPixel & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255"];
n49712 [shape=box,label="(49712)\ncast destData[destPosition] = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast destPixel & cast 255"];
n49711 [shape=box,label="(49711)\nvar destFormat = @:exhaustive destFormat\n@:cond-branch destFormat"];
n49711 -> n49712[style="dashed",color="gray",label="case 0"];
n49711 -> n49713[style="dashed",color="gray",label="case 1"];
n49711 -> n49714[style="dashed",color="gray",label="case 2"];
n49711 -> n49715[style="dashed",color="gray",label="next"];
n49710 [shape=box,label="(49710)"];
n49709 [shape=box,label="(49709)"];
n49708 [shape=box,label="(49708)"];
n49707 [shape=box,label="(49707)\nvar r = (cast cast cast cast cast cast cast cast destPixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar r = r >> 16\nvar g = (cast cast cast cast cast cast cast cast destPixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar g = g >> 16\nvar b = (cast cast cast cast cast cast cast cast destPixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar b = b >> 16\nvar destPixel = r & 255\nvar destPixel = destPixel << 24\nvar destPixel = g & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = b & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49706 [shape=box,label="(49706)\nvar this = lime.math._RGBA.RGBA_Impl_.__alpha16\nvar tmp = cast this[cast cast cast cast cast cast destPixel & cast 255]\nlime.math._RGBA.RGBA_Impl_.a16 = tmp"];
n49706 -> n49707[style="dashed",color="gray",label="sub"];
n49706 -> n49708[style="dashed",color="gray",label="next"];
n49705 [shape=box,label="(49705)"];
n49704 [shape=box,label="(49704)\ndestPixel = 0"];
n49703 [shape=box,label="(49703)\nvar tmp = (cast cast cast cast cast cast destPixel & cast 255) != 255\n@:cond-branch tmp"];
n49703 -> n49706[style="dashed",color="gray",label="then"];
n49703 -> n49709[style="dashed",color="gray",label="next"];
n49702 [shape=box,label="(49702)\nvar tmp = cast cast cast destPixel != 0\n@:cond-branch tmp"];
n49702 -> n49704[style="dashed",color="gray",label="then"];
n49702 -> n49705[style="dashed",color="gray",label="next"];
n49701 [shape=box,label="(49701)\nvar tmp = (cast cast cast cast cast cast destPixel & cast 255) == 0\n@:cond-branch tmp"];
n49701 -> n49702[style="dashed",color="gray",label="then"];
n49701 -> n49703[style="dashed",color="gray",label="else"];
n49701 -> n49710[style="dashed",color="gray",label="next"];
n49700 [shape=box,label="(49700)\nvar destPremultiplied = destPremultiplied\n@:cond-branch destPremultiplied"];
n49700 -> n49701[style="dashed",color="gray",label="then"];
n49700 -> n49711[style="dashed",color="gray",label="next"];
n49699 [shape=box,label="(49699)"];
n49699 -> n49700[style="dashed",color="gray",label="sub"];
n49699 -> n49716[style="dashed",color="gray",label="next"];
n49698 [shape=box,label="(49698)\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = blendAlpha * 255.0\nvar idx = Math.round(idx)\nvar value = cast this[idx]\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = value & 255\ndestPixel = destPixel | destPixel"];
n49697 [shape=box,label="(49697)"];
n49697 -> n49698[style="dashed",color="gray",label="sub"];
n49697 -> n49699[style="dashed",color="gray",label="next"];
n49696 [shape=box,label="(49696)\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast sourcePixel >>> 8 & cast 255) * sourceAlpha\nvar idx = (cast cast cast cast cast cast destPixel >>> 8 & cast 255) * destAlpha\nvar idx = idx * oneMinusSourceAlpha\nvar idx = idx + idx\nvar idx = idx / blendAlpha\nvar idx = Math.round(idx)\nvar value = cast this[idx]\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = value & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49695 [shape=box,label="(49695)"];
n49695 -> n49696[style="dashed",color="gray",label="sub"];
n49695 -> n49697[style="dashed",color="gray",label="next"];
n49694 [shape=box,label="(49694)\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast sourcePixel >>> 16 & cast 255) * sourceAlpha\nvar idx = (cast cast cast cast cast cast destPixel >>> 16 & cast 255) * destAlpha\nvar idx = idx * oneMinusSourceAlpha\nvar idx = idx + idx\nvar idx = idx / blendAlpha\nvar idx = Math.round(idx)\nvar value = cast this[idx]\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = value & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49693 [shape=box,label="(49693)"];
n49693 -> n49694[style="dashed",color="gray",label="sub"];
n49693 -> n49695[style="dashed",color="gray",label="next"];
n49692 [shape=box,label="(49692)\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast sourcePixel >>> 24 & cast 255) * sourceAlpha\nvar idx = (cast cast cast cast cast cast destPixel >>> 24 & cast 255) * destAlpha\nvar idx = idx * oneMinusSourceAlpha\nvar idx = idx + idx\nvar idx = idx / blendAlpha\nvar idx = Math.round(idx)\nvar value = cast this[idx]\nvar destPixel = value & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49691 [shape=box,label="(49691)\ndestAlpha = (cast cast cast cast destPixel & cast 255) / 255.0\noneMinusSourceAlpha = 1 - sourceAlpha\nvar blendAlpha = destAlpha * oneMinusSourceAlpha\nblendAlpha = sourceAlpha + blendAlpha"];
n49691 -> n49692[style="dashed",color="gray",label="sub"];
n49691 -> n49693[style="dashed",color="gray",label="next"];
n49690 [shape=box,label="(49690)\nvar sourceAlpha = (cast cast cast cast alphaPixel & cast 255) / 255.0\nvar sourceAlpha = (cast cast cast cast sourcePixel & cast 255) / 255.0\nsourceAlpha = sourceAlpha * sourceAlpha\nvar tmp = sourceAlpha > 0\n@:cond-branch tmp"];
n49690 -> n49691[style="dashed",color="gray",label="then"];
n49690 -> n49717[style="dashed",color="gray",label="next"];
n49689 [shape=box,label="(49689)"];
n49688 [shape=box,label="(49688)"];
n49687 [shape=box,label="(49687)"];
n49687 -> n49688[style="dashed",color="gray",label="sub"];
n49687 -> n49689[style="dashed",color="gray",label="next"];
n49686 [shape=box,label="(49686)\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n49685 [shape=box,label="(49685)\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n49684 [shape=box,label="(49684)\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n49683 [shape=box,label="(49683)\nvar alphaFormat = @:exhaustive alphaFormat\n@:cond-branch alphaFormat"];
n49683 -> n49684[style="dashed",color="gray",label="case 0"];
n49683 -> n49685[style="dashed",color="gray",label="case 1"];
n49683 -> n49686[style="dashed",color="gray",label="case 2"];
n49683 -> n49687[style="dashed",color="gray",label="next"];
n49682 [shape=box,label="(49682)"];
n49682 -> n49683[style="dashed",color="gray",label="sub"];
n49682 -> n49690[style="dashed",color="gray",label="next"];
n49681 [shape=box,label="(49681)"];
n49680 [shape=box,label="(49680)"];
n49679 [shape=box,label="(49679)"];
n49678 [shape=box,label="(49678)\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast destPixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar r = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast destPixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar g = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast destPixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar b = cast this[idx]\nvar destPixel = r & 255\nvar destPixel = destPixel << 24\nvar destPixel = g & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = b & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49677 [shape=box,label="(49677)\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast cast cast destPixel & cast 255)"];
n49677 -> n49678[style="dashed",color="gray",label="sub"];
n49677 -> n49679[style="dashed",color="gray",label="next"];
n49676 [shape=box,label="(49676)\n@:cond-branch tmp"];
n49676 -> n49677[style="dashed",color="gray",label="then"];
n49676 -> n49680[style="dashed",color="gray",label="next"];
n49675 [shape=box,label="(49675)\ntmp = false"];
n49674 [shape=box,label="(49674)\ntmp = (cast cast cast cast cast cast destPixel & cast 255) != 255"];
n49673 [shape=box,label="(49673)\nvar tmp\nvar tmp = (cast cast cast cast cast cast destPixel & cast 255) != 0\n@:cond-branch tmp"];
n49673 -> n49674[style="dashed",color="gray",label="then"];
n49673 -> n49675[style="dashed",color="gray",label="else"];
n49673 -> n49676[style="dashed",color="gray",label="next"];
n49672 [shape=box,label="(49672)\nvar destPremultiplied = destPremultiplied\n@:cond-branch destPremultiplied"];
n49672 -> n49673[style="dashed",color="gray",label="then"];
n49672 -> n49681[style="dashed",color="gray",label="next"];
n49671 [shape=box,label="(49671)\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast destData[destPosition] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\ndestPixel = destPixel | destPixel"];
n49670 [shape=box,label="(49670)\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast destData[destPosition] & 255\ndestPixel = destPixel | destPixel"];
n49669 [shape=box,label="(49669)\nvar destPixel = cast cast destData[destPosition] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\ndestPixel = destPixel | destPixel"];
n49668 [shape=box,label="(49668)\nvar destFormat = @:exhaustive destFormat\n@:cond-branch destFormat"];
n49668 -> n49669[style="dashed",color="gray",label="case 0"];
n49668 -> n49670[style="dashed",color="gray",label="case 1"];
n49668 -> n49671[style="dashed",color="gray",label="case 2"];
n49668 -> n49672[style="dashed",color="gray",label="next"];
n49667 [shape=box,label="(49667)"];
n49667 -> n49668[style="dashed",color="gray",label="sub"];
n49667 -> n49682[style="dashed",color="gray",label="next"];
n49666 [shape=box,label="(49666)"];
n49665 [shape=box,label="(49665)"];
n49664 [shape=box,label="(49664)"];
n49663 [shape=box,label="(49663)\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar r = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar g = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar b = cast this[idx]\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast cast cast sourcePixel & cast 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49662 [shape=box,label="(49662)\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast cast cast sourcePixel & cast 255)"];
n49662 -> n49663[style="dashed",color="gray",label="sub"];
n49662 -> n49664[style="dashed",color="gray",label="next"];
n49661 [shape=box,label="(49661)\n@:cond-branch tmp"];
n49661 -> n49662[style="dashed",color="gray",label="then"];
n49661 -> n49665[style="dashed",color="gray",label="next"];
n49660 [shape=box,label="(49660)\ntmp = false"];
n49659 [shape=box,label="(49659)\ntmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 255"];
n49658 [shape=box,label="(49658)\nvar tmp\nvar tmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 0\n@:cond-branch tmp"];
n49658 -> n49659[style="dashed",color="gray",label="then"];
n49658 -> n49660[style="dashed",color="gray",label="else"];
n49658 -> n49661[style="dashed",color="gray",label="next"];
n49657 [shape=box,label="(49657)\nvar sourcePremultiplied = sourcePremultiplied\n@:cond-branch sourcePremultiplied"];
n49657 -> n49658[style="dashed",color="gray",label="then"];
n49657 -> n49666[style="dashed",color="gray",label="next"];
n49656 [shape=box,label="(49656)\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49655 [shape=box,label="(49655)\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49654 [shape=box,label="(49654)\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49653 [shape=box,label="(49653)\nvar sourceFormat = @:exhaustive sourceFormat\n@:cond-branch sourceFormat"];
n49653 -> n49654[style="dashed",color="gray",label="case 0"];
n49653 -> n49655[style="dashed",color="gray",label="case 1"];
n49653 -> n49656[style="dashed",color="gray",label="case 2"];
n49653 -> n49657[style="dashed",color="gray",label="next"];
n49652 [shape=box,label="(49652)\n`3 = `3 + 1\nvar x = `3 - 1"];
n49652 -> n49653[style="dashed",color="gray",label="sub"];
n49652 -> n49667[style="dashed",color="gray",label="next"];
n49651 [shape=box,label="(49651)\nbreak"];
n49650 [shape=box,label="(49650)\nvar tmp = ! ((`3 < `2))\n@:cond-branch tmp"];
n49650 -> n49651[style="dashed",color="gray",label="then"];
n49650 -> n49652[style="dashed",color="gray",label="next"];
n49649 [shape=box,label="<loop-head>
(49649)"];
n49648 [shape=box,label="(49648)\nwhile ((true)) @:block 49650"];
n49648 -> n49649[style="dashed",color="gray",label="loop-head"];
n49648 -> n49650[style="dashed",color="gray",label="loop-body"];
n49648 -> n49718[style="dashed",color="gray",label="next"];
n49647 [shape=box,label="(49647)\nvar `3 = 0\nvar `2 = destView.width"];
n49647 -> n49648[style="dashed",color="gray",label="merge"];
n49646 [shape=box,label="(49646)\n`1 = `1 + 1\nvar y = `1 - 1\nvar sourceView = sourceView.byteOffset\nvar sourcePosition = sourceView.stride * y\nsourcePosition = sourceView + sourcePosition\nvar destView = destView.byteOffset\nvar destPosition = destView.stride * y\ndestPosition = destView + destPosition\nvar alphaView = alphaView.byteOffset\nvar alphaPosition = alphaView.stride * y\nalphaPosition = alphaView + alphaPosition"];
n49646 -> n49647[style="dashed",color="gray",label="sub"];
n49646 -> n49719[style="dashed",color="gray",label="next"];
n49645 [shape=box,label="(49645)\nbreak"];
n49644 [shape=box,label="(49644)\nvar tmp = ! ((`1 < `))\n@:cond-branch tmp"];
n49644 -> n49645[style="dashed",color="gray",label="then"];
n49644 -> n49646[style="dashed",color="gray",label="next"];
n49643 [shape=box,label="<loop-head>
(49643)"];
n49642 [shape=box,label="(49642)\nwhile ((true)) @:block 49644"];
n49642 -> n49643[style="dashed",color="gray",label="loop-head"];
n49642 -> n49644[style="dashed",color="gray",label="loop-body"];
n49642 -> n49720[style="dashed",color="gray",label="next"];
n49641 [shape=box,label="(49641)\nvar `1 = 0\nvar ` = destView.height"];
n49641 -> n49721[style="dashed",color="gray",label="merge"];
n49640 [shape=box,label="(49640)\nvar `1 = 0\nvar ` = destView.height"];
n49640 -> n49642[style="dashed",color="gray",label="merge"];
n49639 [shape=box,label="(49639)\nvar alphaData = alphaImage.buffer.data\nvar alphaFormat = alphaImage.buffer.format\nvar alphaPosition\nvar alphaPixel\nvar alphaView = new lime._internal.graphics._ImageDataUtil.ImageDataView(alphaImage, new lime.math.Rectangle(alphaPoint.x, alphaPoint.y, alphaImage.width, alphaImage.height))\nalphaView.offset(sourceView.x, sourceView.y)\nvar x = destPoint.x\nvar tmp = cast x | 0\nvar x = destPoint.y\nvar tmp = cast x | 0\ndestView.clip(tmp, tmp, alphaView.width, alphaView.height)\nvar blend = blend\n@:cond-branch blend"];
n49639 -> n49640[style="dashed",color="gray",label="then"];
n49639 -> n49641[style="dashed",color="gray",label="else"];
n49639 -> n49777[style="dashed",color="gray",label="next"];
n49638 [shape=box,label="(49638)\nalphaPoint = new lime.math.Vector2()"];
n49637 [shape=box,label="(49637)"];
n49636 [shape=box,label="(49636)"];
n49635 [shape=box,label="(49635)"];
n49634 [shape=box,label="(49634)"];
n49633 [shape=box,label="(49633)"];
n49632 [shape=box,label="(49632)\nsourcePosition = sourcePosition + 4\ndestPosition = destPosition + 4"];
n49631 [shape=box,label="(49631)"];
n49630 [shape=box,label="(49630)\ncast destData[destPosition] = cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast sourcePixel & cast 255"];
n49629 [shape=box,label="(49629)\ncast destData[destPosition] = cast cast cast cast cast sourcePixel & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255"];
n49628 [shape=box,label="(49628)\ncast destData[destPosition] = cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast sourcePixel & cast 255"];
n49627 [shape=box,label="(49627)\nvar destFormat = @:exhaustive destFormat\n@:cond-branch destFormat"];
n49627 -> n49628[style="dashed",color="gray",label="case 0"];
n49627 -> n49629[style="dashed",color="gray",label="case 1"];
n49627 -> n49630[style="dashed",color="gray",label="case 2"];
n49627 -> n49631[style="dashed",color="gray",label="next"];
n49626 [shape=box,label="(49626)"];
n49625 [shape=box,label="(49625)"];
n49624 [shape=box,label="(49624)"];
n49623 [shape=box,label="(49623)\nvar r = (cast cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar r = r >> 16\nvar g = (cast cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar g = g >> 16\nvar b = (cast cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar b = b >> 16\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast cast cast sourcePixel & cast 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49622 [shape=box,label="(49622)\nvar this = lime.math._RGBA.RGBA_Impl_.__alpha16\nvar tmp = cast this[cast cast cast cast cast cast sourcePixel & cast 255]\nlime.math._RGBA.RGBA_Impl_.a16 = tmp"];
n49622 -> n49623[style="dashed",color="gray",label="sub"];
n49622 -> n49624[style="dashed",color="gray",label="next"];
n49621 [shape=box,label="(49621)"];
n49620 [shape=box,label="(49620)\nsourcePixel = 0"];
n49619 [shape=box,label="(49619)\nvar tmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 255\n@:cond-branch tmp"];
n49619 -> n49622[style="dashed",color="gray",label="then"];
n49619 -> n49625[style="dashed",color="gray",label="next"];
n49618 [shape=box,label="(49618)\nvar tmp = cast cast cast sourcePixel != 0\n@:cond-branch tmp"];
n49618 -> n49620[style="dashed",color="gray",label="then"];
n49618 -> n49621[style="dashed",color="gray",label="next"];
n49617 [shape=box,label="(49617)\nvar tmp = (cast cast cast cast cast cast sourcePixel & cast 255) == 0\n@:cond-branch tmp"];
n49617 -> n49618[style="dashed",color="gray",label="then"];
n49617 -> n49619[style="dashed",color="gray",label="else"];
n49617 -> n49626[style="dashed",color="gray",label="next"];
n49616 [shape=box,label="(49616)\nvar destPremultiplied = destPremultiplied\n@:cond-branch destPremultiplied"];
n49616 -> n49617[style="dashed",color="gray",label="then"];
n49616 -> n49627[style="dashed",color="gray",label="next"];
n49615 [shape=box,label="(49615)"];
n49615 -> n49616[style="dashed",color="gray",label="sub"];
n49615 -> n49632[style="dashed",color="gray",label="next"];
n49614 [shape=box,label="(49614)"];
n49613 [shape=box,label="(49613)"];
n49612 [shape=box,label="(49612)"];
n49611 [shape=box,label="(49611)\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar r = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar g = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar b = cast this[idx]\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast cast cast sourcePixel & cast 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49610 [shape=box,label="(49610)\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast cast cast sourcePixel & cast 255)"];
n49610 -> n49611[style="dashed",color="gray",label="sub"];
n49610 -> n49612[style="dashed",color="gray",label="next"];
n49609 [shape=box,label="(49609)\n@:cond-branch tmp"];
n49609 -> n49610[style="dashed",color="gray",label="then"];
n49609 -> n49613[style="dashed",color="gray",label="next"];
n49608 [shape=box,label="(49608)\ntmp = false"];
n49607 [shape=box,label="(49607)\ntmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 255"];
n49606 [shape=box,label="(49606)\nvar tmp\nvar tmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 0\n@:cond-branch tmp"];
n49606 -> n49607[style="dashed",color="gray",label="then"];
n49606 -> n49608[style="dashed",color="gray",label="else"];
n49606 -> n49609[style="dashed",color="gray",label="next"];
n49605 [shape=box,label="(49605)\nvar sourcePremultiplied = sourcePremultiplied\n@:cond-branch sourcePremultiplied"];
n49605 -> n49606[style="dashed",color="gray",label="then"];
n49605 -> n49614[style="dashed",color="gray",label="next"];
n49604 [shape=box,label="(49604)\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49603 [shape=box,label="(49603)\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49602 [shape=box,label="(49602)\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49601 [shape=box,label="(49601)\nvar sourceFormat = @:exhaustive sourceFormat\n@:cond-branch sourceFormat"];
n49601 -> n49602[style="dashed",color="gray",label="case 0"];
n49601 -> n49603[style="dashed",color="gray",label="case 1"];
n49601 -> n49604[style="dashed",color="gray",label="case 2"];
n49601 -> n49605[style="dashed",color="gray",label="next"];
n49600 [shape=box,label="(49600)\n`3 = `3 + 1\nvar x = `3 - 1"];
n49600 -> n49601[style="dashed",color="gray",label="sub"];
n49600 -> n49615[style="dashed",color="gray",label="next"];
n49599 [shape=box,label="(49599)\nbreak"];
n49598 [shape=box,label="(49598)\nvar tmp = ! ((`3 < `2))\n@:cond-branch tmp"];
n49598 -> n49599[style="dashed",color="gray",label="then"];
n49598 -> n49600[style="dashed",color="gray",label="next"];
n49597 [shape=box,label="<loop-head>
(49597)"];
n49596 [shape=box,label="(49596)\nwhile ((true)) @:block 49598"];
n49596 -> n49597[style="dashed",color="gray",label="loop-head"];
n49596 -> n49598[style="dashed",color="gray",label="loop-body"];
n49596 -> n49633[style="dashed",color="gray",label="next"];
n49595 [shape=box,label="(49595)\nvar `3 = 0\nvar `2 = destView.width"];
n49595 -> n49596[style="dashed",color="gray",label="merge"];
n49594 [shape=box,label="(49594)\n`1 = `1 + 1\nvar y = `1 - 1\nvar sourceView = sourceView.byteOffset\nvar sourcePosition = sourceView.stride * y\nsourcePosition = sourceView + sourcePosition\nvar destView = destView.byteOffset\nvar destPosition = destView.stride * y\ndestPosition = destView + destPosition"];
n49594 -> n49595[style="dashed",color="gray",label="sub"];
n49594 -> n49634[style="dashed",color="gray",label="next"];
n49593 [shape=box,label="(49593)\nbreak"];
n49592 [shape=box,label="(49592)\nvar tmp = ! ((`1 < `))\n@:cond-branch tmp"];
n49592 -> n49593[style="dashed",color="gray",label="then"];
n49592 -> n49594[style="dashed",color="gray",label="next"];
n49591 [shape=box,label="<loop-head>
(49591)"];
n49590 [shape=box,label="(49590)\nwhile ((true)) @:block 49592"];
n49590 -> n49591[style="dashed",color="gray",label="loop-head"];
n49590 -> n49592[style="dashed",color="gray",label="loop-body"];
n49590 -> n49635[style="dashed",color="gray",label="next"];
n49589 [shape=box,label="(49589)"];
n49588 [shape=box,label="(49588)\n`1 = `1 + 1\nvar y = `1 - 1\nvar sourceView = sourceView.byteOffset\nvar sourcePosition = sourceView.stride * y\nsourcePosition = sourceView + sourcePosition\nvar destView = destView.byteOffset\nvar destPosition = destView.stride * y\ndestPosition = destView + destPosition\nvar tmp = destView.width * destBytesPerPixel\nvar tmp = sourcePosition + tmp\nvar tmp = sourceData.subarray(sourcePosition, tmp)\ndestData.set(tmp, destPosition)"];
n49587 [shape=box,label="(49587)\nbreak"];
n49586 [shape=box,label="(49586)\nvar tmp = ! ((`1 < `))\n@:cond-branch tmp"];
n49586 -> n49587[style="dashed",color="gray",label="then"];
n49586 -> n49588[style="dashed",color="gray",label="next"];
n49585 [shape=box,label="<loop-head>
(49585)"];
n49584 [shape=box,label="(49584)\nwhile ((true)) @:block 49586"];
n49584 -> n49585[style="dashed",color="gray",label="loop-head"];
n49584 -> n49586[style="dashed",color="gray",label="loop-body"];
n49584 -> n49589[style="dashed",color="gray",label="next"];
n49583 [shape=box,label="(49583)\nvar `1 = 0\nvar ` = destView.height"];
n49583 -> n49590[style="dashed",color="gray",label="merge"];
n49582 [shape=box,label="(49582)\nvar `1 = 0\nvar ` = destView.height"];
n49582 -> n49584[style="dashed",color="gray",label="merge"];
n49581 [shape=box,label="(49581)\n@:cond-branch tmp"];
n49581 -> n49582[style="dashed",color="gray",label="then"];
n49581 -> n49583[style="dashed",color="gray",label="else"];
n49581 -> n49636[style="dashed",color="gray",label="next"];
n49580 [shape=box,label="(49580)\ntmp = false"];
n49579 [shape=box,label="(49579)\ntmp = sourceBytesPerPixel == destBytesPerPixel"];
n49578 [shape=box,label="(49578)\n@:cond-branch tmp"];
n49578 -> n49579[style="dashed",color="gray",label="then"];
n49578 -> n49580[style="dashed",color="gray",label="else"];
n49578 -> n49581[style="dashed",color="gray",label="next"];
n49577 [shape=box,label="(49577)\ntmp = false"];
n49576 [shape=box,label="(49576)\ntmp = sourcePremultiplied == destPremultiplied"];
n49575 [shape=box,label="(49575)"];
n49574 [shape=box,label="(49574)"];
n49573 [shape=box,label="(49573)"];
n49572 [shape=box,label="(49572)\nsourcePosition = sourcePosition + 4\ndestPosition = destPosition + 4"];
n49571 [shape=box,label="(49571)"];
n49570 [shape=box,label="(49570)\ncast destData[destPosition] = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast destPixel & cast 255"];
n49569 [shape=box,label="(49569)\ncast destData[destPosition] = cast cast cast cast cast destPixel & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255"];
n49568 [shape=box,label="(49568)\ncast destData[destPosition] = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast destPixel & cast 255"];
n49567 [shape=box,label="(49567)\nvar destFormat = @:exhaustive destFormat\n@:cond-branch destFormat"];
n49567 -> n49568[style="dashed",color="gray",label="case 0"];
n49567 -> n49569[style="dashed",color="gray",label="case 1"];
n49567 -> n49570[style="dashed",color="gray",label="case 2"];
n49567 -> n49571[style="dashed",color="gray",label="next"];
n49566 [shape=box,label="(49566)"];
n49565 [shape=box,label="(49565)"];
n49564 [shape=box,label="(49564)"];
n49563 [shape=box,label="(49563)\nvar r = (cast cast cast cast cast cast cast cast destPixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar r = r >> 16\nvar g = (cast cast cast cast cast cast cast cast destPixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar g = g >> 16\nvar b = (cast cast cast cast cast cast cast cast destPixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar b = b >> 16\nvar destPixel = r & 255\nvar destPixel = destPixel << 24\nvar destPixel = g & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = b & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49562 [shape=box,label="(49562)\nvar this = lime.math._RGBA.RGBA_Impl_.__alpha16\nvar tmp = cast this[cast cast cast cast cast cast destPixel & cast 255]\nlime.math._RGBA.RGBA_Impl_.a16 = tmp"];
n49562 -> n49563[style="dashed",color="gray",label="sub"];
n49562 -> n49564[style="dashed",color="gray",label="next"];
n49561 [shape=box,label="(49561)"];
n49560 [shape=box,label="(49560)\ndestPixel = 0"];
n49559 [shape=box,label="(49559)\nvar tmp = (cast cast cast cast cast cast destPixel & cast 255) != 255\n@:cond-branch tmp"];
n49559 -> n49562[style="dashed",color="gray",label="then"];
n49559 -> n49565[style="dashed",color="gray",label="next"];
n49558 [shape=box,label="(49558)\nvar tmp = cast cast cast destPixel != 0\n@:cond-branch tmp"];
n49558 -> n49560[style="dashed",color="gray",label="then"];
n49558 -> n49561[style="dashed",color="gray",label="next"];
n49557 [shape=box,label="(49557)\nvar tmp = (cast cast cast cast cast cast destPixel & cast 255) == 0\n@:cond-branch tmp"];
n49557 -> n49558[style="dashed",color="gray",label="then"];
n49557 -> n49559[style="dashed",color="gray",label="else"];
n49557 -> n49566[style="dashed",color="gray",label="next"];
n49556 [shape=box,label="(49556)\nvar destPremultiplied = destPremultiplied\n@:cond-branch destPremultiplied"];
n49556 -> n49557[style="dashed",color="gray",label="then"];
n49556 -> n49567[style="dashed",color="gray",label="next"];
n49555 [shape=box,label="(49555)"];
n49555 -> n49556[style="dashed",color="gray",label="sub"];
n49555 -> n49572[style="dashed",color="gray",label="next"];
n49554 [shape=box,label="(49554)"];
n49553 [shape=box,label="(49553)\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = blendAlpha * 255.0\nvar idx = Math.round(idx)\nvar value = cast this[idx]\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = value & 255\ndestPixel = destPixel | destPixel"];
n49552 [shape=box,label="(49552)"];
n49552 -> n49553[style="dashed",color="gray",label="sub"];
n49552 -> n49554[style="dashed",color="gray",label="next"];
n49551 [shape=box,label="(49551)\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast sourcePixel >>> 8 & cast 255) * sourceAlpha\nvar idx = (cast cast cast cast cast cast destPixel >>> 8 & cast 255) * destAlpha\nvar idx = idx * oneMinusSourceAlpha\nvar idx = idx + idx\nvar idx = idx / blendAlpha\nvar idx = Math.round(idx)\nvar value = cast this[idx]\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = value & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49550 [shape=box,label="(49550)"];
n49550 -> n49551[style="dashed",color="gray",label="sub"];
n49550 -> n49552[style="dashed",color="gray",label="next"];
n49549 [shape=box,label="(49549)\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast sourcePixel >>> 16 & cast 255) * sourceAlpha\nvar idx = (cast cast cast cast cast cast destPixel >>> 16 & cast 255) * destAlpha\nvar idx = idx * oneMinusSourceAlpha\nvar idx = idx + idx\nvar idx = idx / blendAlpha\nvar idx = Math.round(idx)\nvar value = cast this[idx]\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = value & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49548 [shape=box,label="(49548)"];
n49548 -> n49549[style="dashed",color="gray",label="sub"];
n49548 -> n49550[style="dashed",color="gray",label="next"];
n49547 [shape=box,label="(49547)\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast sourcePixel >>> 24 & cast 255) * sourceAlpha\nvar idx = (cast cast cast cast cast cast destPixel >>> 24 & cast 255) * destAlpha\nvar idx = idx * oneMinusSourceAlpha\nvar idx = idx + idx\nvar idx = idx / blendAlpha\nvar idx = Math.round(idx)\nvar value = cast this[idx]\nvar destPixel = value & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49546 [shape=box,label="(49546)"];
n49546 -> n49547[style="dashed",color="gray",label="sub"];
n49546 -> n49548[style="dashed",color="gray",label="next"];
n49545 [shape=box,label="(49545)\ndestPixel = 0"];
n49544 [shape=box,label="(49544)\nsourceAlpha = (cast cast cast cast sourcePixel & cast 255) / 255.0\ndestAlpha = (cast cast cast cast destPixel & cast 255) / 255.0\noneMinusSourceAlpha = 1 - sourceAlpha\nvar blendAlpha = destAlpha * oneMinusSourceAlpha\nblendAlpha = sourceAlpha + blendAlpha\nvar tmp = blendAlpha == 0\n@:cond-branch tmp"];
n49544 -> n49545[style="dashed",color="gray",label="then"];
n49544 -> n49546[style="dashed",color="gray",label="else"];
n49544 -> n49555[style="dashed",color="gray",label="next"];
n49543 [shape=box,label="(49543)"];
n49542 [shape=box,label="(49542)"];
n49541 [shape=box,label="(49541)"];
n49540 [shape=box,label="(49540)\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast destPixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar r = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast destPixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar g = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast destPixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar b = cast this[idx]\nvar destPixel = r & 255\nvar destPixel = destPixel << 24\nvar destPixel = g & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = b & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49539 [shape=box,label="(49539)\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast cast cast destPixel & cast 255)"];
n49539 -> n49540[style="dashed",color="gray",label="sub"];
n49539 -> n49541[style="dashed",color="gray",label="next"];
n49538 [shape=box,label="(49538)\n@:cond-branch tmp"];
n49538 -> n49539[style="dashed",color="gray",label="then"];
n49538 -> n49542[style="dashed",color="gray",label="next"];
n49537 [shape=box,label="(49537)\ntmp = false"];
n49536 [shape=box,label="(49536)\ntmp = (cast cast cast cast cast cast destPixel & cast 255) != 255"];
n49535 [shape=box,label="(49535)\nvar tmp\nvar tmp = (cast cast cast cast cast cast destPixel & cast 255) != 0\n@:cond-branch tmp"];
n49535 -> n49536[style="dashed",color="gray",label="then"];
n49535 -> n49537[style="dashed",color="gray",label="else"];
n49535 -> n49538[style="dashed",color="gray",label="next"];
n49534 [shape=box,label="(49534)\nvar destPremultiplied = destPremultiplied\n@:cond-branch destPremultiplied"];
n49534 -> n49535[style="dashed",color="gray",label="then"];
n49534 -> n49543[style="dashed",color="gray",label="next"];
n49533 [shape=box,label="(49533)\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast destData[destPosition] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\ndestPixel = destPixel | destPixel"];
n49532 [shape=box,label="(49532)\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast destData[destPosition] & 255\ndestPixel = destPixel | destPixel"];
n49531 [shape=box,label="(49531)\nvar destPixel = cast cast destData[destPosition] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\ndestPixel = destPixel | destPixel"];
n49530 [shape=box,label="(49530)\nvar destFormat = @:exhaustive destFormat\n@:cond-branch destFormat"];
n49530 -> n49531[style="dashed",color="gray",label="case 0"];
n49530 -> n49532[style="dashed",color="gray",label="case 1"];
n49530 -> n49533[style="dashed",color="gray",label="case 2"];
n49530 -> n49534[style="dashed",color="gray",label="next"];
n49529 [shape=box,label="(49529)"];
n49529 -> n49530[style="dashed",color="gray",label="sub"];
n49529 -> n49544[style="dashed",color="gray",label="next"];
n49528 [shape=box,label="(49528)"];
n49527 [shape=box,label="(49527)"];
n49526 [shape=box,label="(49526)"];
n49525 [shape=box,label="(49525)\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar r = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar g = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar b = cast this[idx]\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast cast cast sourcePixel & cast 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49524 [shape=box,label="(49524)\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast cast cast sourcePixel & cast 255)"];
n49524 -> n49525[style="dashed",color="gray",label="sub"];
n49524 -> n49526[style="dashed",color="gray",label="next"];
n49523 [shape=box,label="(49523)\n@:cond-branch tmp"];
n49523 -> n49524[style="dashed",color="gray",label="then"];
n49523 -> n49527[style="dashed",color="gray",label="next"];
n49522 [shape=box,label="(49522)\ntmp = false"];
n49521 [shape=box,label="(49521)\ntmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 255"];
n49520 [shape=box,label="(49520)\nvar tmp\nvar tmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 0\n@:cond-branch tmp"];
n49520 -> n49521[style="dashed",color="gray",label="then"];
n49520 -> n49522[style="dashed",color="gray",label="else"];
n49520 -> n49523[style="dashed",color="gray",label="next"];
n49519 [shape=box,label="(49519)\nvar sourcePremultiplied = sourcePremultiplied\n@:cond-branch sourcePremultiplied"];
n49519 -> n49520[style="dashed",color="gray",label="then"];
n49519 -> n49528[style="dashed",color="gray",label="next"];
n49518 [shape=box,label="(49518)\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49517 [shape=box,label="(49517)\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49516 [shape=box,label="(49516)\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49515 [shape=box,label="(49515)\nvar sourceFormat = @:exhaustive sourceFormat\n@:cond-branch sourceFormat"];
n49515 -> n49516[style="dashed",color="gray",label="case 0"];
n49515 -> n49517[style="dashed",color="gray",label="case 1"];
n49515 -> n49518[style="dashed",color="gray",label="case 2"];
n49515 -> n49519[style="dashed",color="gray",label="next"];
n49514 [shape=box,label="(49514)\n`3 = `3 + 1\nvar x = `3 - 1"];
n49514 -> n49515[style="dashed",color="gray",label="sub"];
n49514 -> n49529[style="dashed",color="gray",label="next"];
n49513 [shape=box,label="(49513)\nbreak"];
n49512 [shape=box,label="(49512)\nvar tmp = ! ((`3 < `2))\n@:cond-branch tmp"];
n49512 -> n49513[style="dashed",color="gray",label="then"];
n49512 -> n49514[style="dashed",color="gray",label="next"];
n49511 [shape=box,label="<loop-head>
(49511)"];
n49510 [shape=box,label="(49510)\nwhile ((true)) @:block 49512"];
n49510 -> n49511[style="dashed",color="gray",label="loop-head"];
n49510 -> n49512[style="dashed",color="gray",label="loop-body"];
n49510 -> n49573[style="dashed",color="gray",label="next"];
n49509 [shape=box,label="(49509)\nvar `3 = 0\nvar `2 = destView.width"];
n49509 -> n49510[style="dashed",color="gray",label="merge"];
n49508 [shape=box,label="(49508)\n`1 = `1 + 1\nvar y = `1 - 1\nvar sourceView = sourceView.byteOffset\nvar sourcePosition = sourceView.stride * y\nsourcePosition = sourceView + sourcePosition\nvar destView = destView.byteOffset\nvar destPosition = destView.stride * y\ndestPosition = destView + destPosition"];
n49508 -> n49509[style="dashed",color="gray",label="sub"];
n49508 -> n49574[style="dashed",color="gray",label="next"];
n49507 [shape=box,label="(49507)\nbreak"];
n49506 [shape=box,label="(49506)\nvar tmp = ! ((`1 < `))\n@:cond-branch tmp"];
n49506 -> n49507[style="dashed",color="gray",label="then"];
n49506 -> n49508[style="dashed",color="gray",label="next"];
n49505 [shape=box,label="<loop-head>
(49505)"];
n49504 [shape=box,label="(49504)\nwhile ((true)) @:block 49506"];
n49504 -> n49505[style="dashed",color="gray",label="loop-head"];
n49504 -> n49506[style="dashed",color="gray",label="loop-body"];
n49504 -> n49575[style="dashed",color="gray",label="next"];
n49503 [shape=box,label="(49503)\nvar tmp\nvar tmp\nvar tmp = sourceFormat == destFormat\n@:cond-branch tmp"];
n49503 -> n49576[style="dashed",color="gray",label="then"];
n49503 -> n49577[style="dashed",color="gray",label="else"];
n49503 -> n49578[style="dashed",color="gray",label="next"];
n49502 [shape=box,label="(49502)\nvar `1 = 0\nvar ` = destView.height"];
n49502 -> n49504[style="dashed",color="gray",label="merge"];
n49501 [shape=box,label="(49501)\nvar tmp = alphaPoint == null\n@:cond-branch tmp"];
n49501 -> n49638[style="dashed",color="gray",label="then"];
n49501 -> n49639[style="dashed",color="gray",label="next"];
n49500 [shape=box,label="(49500)\nvar blend = blend\n@:cond-branch blend"];
n49500 -> n49502[style="dashed",color="gray",label="then"];
n49500 -> n49503[style="dashed",color="gray",label="else"];
n49500 -> n49637[style="dashed",color="gray",label="next"];
n49499 [shape=box,label="(49499)\nvar tmp = ! useAlphaImage\n@:cond-branch tmp"];
n49499 -> n49500[style="dashed",color="gray",label="then"];
n49499 -> n49501[style="dashed",color="gray",label="else"];
n49499 -> n49778[style="dashed",color="gray",label="next"];
n49498 [shape=box,label="(49498)"];
n49497 [shape=box,label="(49497)\nblend = false"];
n49496 [shape=box,label="(49496)\nblend = ! image.get_transparent()"];
n49495 [shape=box,label="(49495)\nblend = true"];
n49494 [shape=box,label="(49494)\nvar useAlphaImage = useAlphaImage\n@:cond-branch useAlphaImage"];
n49494 -> n49496[style="dashed",color="gray",label="then"];
n49494 -> n49497[style="dashed",color="gray",label="else"];
n49494 -> n49498[style="dashed",color="gray",label="next"];
n49493 [shape=box,label="(49493)\nvar blend\nvar blend = ! mergeAlpha\n@:cond-branch blend"];
n49493 -> n49494[style="dashed",color="gray",label="then"];
n49493 -> n49495[style="dashed",color="gray",label="else"];
n49493 -> n49499[style="dashed",color="gray",label="next"];
n49492 [shape=box,label="(49492)\nuseAlphaImage = false"];
n49491 [shape=box,label="(49491)\nuseAlphaImage = alphaImage.get_transparent()"];
n49490 [shape=box,label="(49490)\nvar sourceView = new lime._internal.graphics._ImageDataUtil.ImageDataView(sourceImage, sourceRect)\nvar destRect = new lime.math.Rectangle(destPoint.x, destPoint.y, sourceView.width, sourceView.height)\nvar destView = new lime._internal.graphics._ImageDataUtil.ImageDataView(image, destRect)\nvar sourceFormat = sourceImage.buffer.format\nvar destFormat = image.buffer.format\nvar sourcePosition\nvar destPosition\nvar sourceAlpha\nvar destAlpha\nvar oneMinusSourceAlpha\nvar blendAlpha\nvar sourcePixel\nvar destPixel\nvar sourcePremultiplied = sourceImage.buffer.premultiplied\nvar destPremultiplied = image.buffer.premultiplied\nvar x = sourceImage.buffer.bitsPerPixel / 8\nvar sourceBytesPerPixel = cast x | 0\nvar x = image.buffer.bitsPerPixel / 8\nvar destBytesPerPixel = cast x | 0\nvar useAlphaImage\nvar useAlphaImage = alphaImage != null\n@:cond-branch useAlphaImage"];
n49490 -> n49491[style="dashed",color="gray",label="then"];
n49490 -> n49492[style="dashed",color="gray",label="else"];
n49490 -> n49493[style="dashed",color="gray",label="next"];
n49489 [shape=box,label="(49489)\nreturn"];
n49488 [shape=box,label="(49488)\n@:cond-branch tmp"];
n49488 -> n49489[style="dashed",color="gray",label="then"];
n49488 -> n49490[style="dashed",color="gray",label="next"];
n49487 [shape=box,label="(49487)\ntmp = true"];
n49486 [shape=box,label="(49486)\ntmp = destData == null"];
n49485 [shape=box,label="(49485)\nvar sourceData = sourceImage.buffer.data\nvar destData = image.buffer.data\nvar tmp\nvar tmp = ! sourceData == null\n@:cond-branch tmp"];
n49485 -> n49486[style="dashed",color="gray",label="then"];
n49485 -> n49487[style="dashed",color="gray",label="else"];
n49485 -> n49488[style="dashed",color="gray",label="next"];
n49484 [shape=box,label="(49484)\nimage.buffer.data.set(sourceImage.buffer.data)"];
n49483 [shape=box,label="(49483)\n@:cond-branch tmp"];
n49483 -> n49484[style="dashed",color="gray",label="then"];
n49483 -> n49485[style="dashed",color="gray",label="else"];
n49483 -> n49779[style="dashed",color="gray",label="next"];
n49482 [shape=box,label="(49482)\ntmp = false"];
n49481 [shape=box,label="(49481)\nvar tmp = image.get_format()\nvar tmp = sourceImage.get_format()\ntmp = tmp == tmp"];
n49480 [shape=box,label="(49480)\n@:cond-branch tmp"];
n49480 -> n49481[style="dashed",color="gray",label="then"];
n49480 -> n49482[style="dashed",color="gray",label="else"];
n49480 -> n49483[style="dashed",color="gray",label="next"];
n49479 [shape=box,label="(49479)\ntmp = false"];
n49478 [shape=box,label="(49478)\ntmp = mergeAlpha == false"];
n49477 [shape=box,label="(49477)\n@:cond-branch tmp"];
n49477 -> n49478[style="dashed",color="gray",label="then"];
n49477 -> n49479[style="dashed",color="gray",label="else"];
n49477 -> n49480[style="dashed",color="gray",label="next"];
n49476 [shape=box,label="(49476)\ntmp = false"];
n49475 [shape=box,label="(49475)\ntmp = alphaPoint == null"];
n49474 [shape=box,label="(49474)\n@:cond-branch tmp"];
n49474 -> n49475[style="dashed",color="gray",label="then"];
n49474 -> n49476[style="dashed",color="gray",label="else"];
n49474 -> n49477[style="dashed",color="gray",label="next"];
n49473 [shape=box,label="(49473)\ntmp = false"];
n49472 [shape=box,label="(49472)\ntmp = alphaImage == null"];
n49471 [shape=box,label="(49471)\n@:cond-branch tmp"];
n49471 -> n49472[style="dashed",color="gray",label="then"];
n49471 -> n49473[style="dashed",color="gray",label="else"];
n49471 -> n49474[style="dashed",color="gray",label="next"];
n49470 [shape=box,label="(49470)\ntmp = false"];
n49469 [shape=box,label="(49469)\ntmp = destPoint.y == 0"];
n49468 [shape=box,label="(49468)\n@:cond-branch tmp"];
n49468 -> n49469[style="dashed",color="gray",label="then"];
n49468 -> n49470[style="dashed",color="gray",label="else"];
n49468 -> n49471[style="dashed",color="gray",label="next"];
n49467 [shape=box,label="(49467)\ntmp = false"];
n49466 [shape=box,label="(49466)\ntmp = destPoint.x == 0"];
n49465 [shape=box,label="(49465)\n@:cond-branch tmp"];
n49465 -> n49466[style="dashed",color="gray",label="then"];
n49465 -> n49467[style="dashed",color="gray",label="else"];
n49465 -> n49468[style="dashed",color="gray",label="next"];
n49464 [shape=box,label="(49464)\ntmp = false"];
n49463 [shape=box,label="(49463)\ntmp = sourceRect.y == 0"];
n49462 [shape=box,label="(49462)\n@:cond-branch tmp"];
n49462 -> n49463[style="dashed",color="gray",label="then"];
n49462 -> n49464[style="dashed",color="gray",label="else"];
n49462 -> n49465[style="dashed",color="gray",label="next"];
n49461 [shape=box,label="(49461)\ntmp = false"];
n49460 [shape=box,label="(49460)\ntmp = sourceRect.x == 0"];
n49459 [shape=box,label="(49459)\n@:cond-branch tmp"];
n49459 -> n49460[style="dashed",color="gray",label="then"];
n49459 -> n49461[style="dashed",color="gray",label="else"];
n49459 -> n49462[style="dashed",color="gray",label="next"];
n49458 [shape=box,label="(49458)\ntmp = false"];
n49457 [shape=box,label="(49457)\ntmp = sourceRect.height == sourceImage.height"];
n49456 [shape=box,label="(49456)\n@:cond-branch tmp"];
n49456 -> n49457[style="dashed",color="gray",label="then"];
n49456 -> n49458[style="dashed",color="gray",label="else"];
n49456 -> n49459[style="dashed",color="gray",label="next"];
n49455 [shape=box,label="(49455)\ntmp = false"];
n49454 [shape=box,label="(49454)\ntmp = sourceRect.width == sourceImage.width"];
n49453 [shape=box,label="(49453)\n@:cond-branch tmp"];
n49453 -> n49454[style="dashed",color="gray",label="then"];
n49453 -> n49455[style="dashed",color="gray",label="else"];
n49453 -> n49456[style="dashed",color="gray",label="next"];
n49452 [shape=box,label="(49452)\ntmp = false"];
n49451 [shape=box,label="(49451)\ntmp = image.height == sourceImage.height"];
n49450 [shape=box,label="<function-end>
(49450)"];
n49449 [shape=box,label="<function-begin>
(49449)\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp = image.width == sourceImage.width\n@:cond-branch tmp"];
n49449 -> n49451[style="dashed",color="gray",label="then"];
n49449 -> n49452[style="dashed",color="gray",label="else"];
n49449 -> n49453[style="dashed",color="gray",label="next"];
n1 [shape=box,label="<root>
(1)"];
}
