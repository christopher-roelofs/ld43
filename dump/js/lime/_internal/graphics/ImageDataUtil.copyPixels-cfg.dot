digraph graphname {
n49779 [shape=box,label="(49779)\nimage.dirty = true\nimage.version ++"];
n49778 [shape=box,label="(49778)"];
n49777 [shape=box,label="(49777)"];
n49776 [shape=box,label="(49776)"];
n49775 [shape=box,label="(49775)\nLoops: 7"];
n49774 [shape=box,label="(49774)\nLoops: 7"];
n49773 [shape=box,label="(49773)\nLoops: 8, 7\nsourcePosition = sourcePosition + 4\ndestPosition = destPosition + 4\nalphaPosition = alphaPosition + 4"];
n49772 [shape=box,label="(49772)\nLoops: 8, 7"];
n49771 [shape=box,label="(49771)\nLoops: 8, 7\ncast destData[destPosition] = cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast sourcePixel & cast 255"];
n49770 [shape=box,label="(49770)\nLoops: 8, 7\ncast destData[destPosition] = cast cast cast cast cast sourcePixel & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255"];
n49769 [shape=box,label="(49769)\nLoops: 8, 7\ncast destData[destPosition] = cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast sourcePixel & cast 255"];
n49768 [shape=box,label="(49768)\nLoops: 8, 7\nvar destFormat = @:exhaustive destFormat\n@:cond-branch destFormat"];
n49767 [shape=box,label="(49767)\nLoops: 8, 7"];
n49766 [shape=box,label="(49766)\nLoops: 8, 7"];
n49765 [shape=box,label="(49765)\nLoops: 8, 7"];
n49764 [shape=box,label="(49764)\nLoops: 8, 7\nvar r = (cast cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar r = r >> 16\nvar g = (cast cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar g = g >> 16\nvar b = (cast cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar b = b >> 16\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast cast cast sourcePixel & cast 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49763 [shape=box,label="(49763)\nLoops: 8, 7\nvar this = lime.math._RGBA.RGBA_Impl_.__alpha16\nvar tmp = cast this[cast cast cast cast cast cast sourcePixel & cast 255]\nlime.math._RGBA.RGBA_Impl_.a16 = tmp"];
n49762 [shape=box,label="(49762)\nLoops: 8, 7"];
n49761 [shape=box,label="(49761)\nLoops: 8, 7\nsourcePixel = 0"];
n49760 [shape=box,label="(49760)\nLoops: 8, 7\nvar tmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 255\n@:cond-branch tmp"];
n49759 [shape=box,label="(49759)\nLoops: 8, 7\nvar tmp = cast cast cast sourcePixel != 0\n@:cond-branch tmp"];
n49758 [shape=box,label="(49758)\nLoops: 8, 7\nvar tmp = (cast cast cast cast cast cast sourcePixel & cast 255) == 0\n@:cond-branch tmp"];
n49757 [shape=box,label="(49757)\nLoops: 8, 7\nvar destPremultiplied = destPremultiplied\n@:cond-branch destPremultiplied"];
n49756 [shape=box,label="(49756)\nLoops: 8, 7"];
n49755 [shape=box,label="(49755)\nLoops: 8, 7\nvar value = (cast cast cast cast alphaPixel & cast 255) / 255\nvar value = (cast cast cast cast sourcePixel & cast 255) * value\nvar value = Math.round(value)\nvar sourcePixel = cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255 & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255 & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255 & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = value & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49754 [shape=box,label="(49754)\nLoops: 8, 7"];
n49753 [shape=box,label="(49753)\nLoops: 8, 7"];
n49752 [shape=box,label="(49752)\nLoops: 8, 7"];
n49751 [shape=box,label="(49751)\nLoops: 8, 7"];
n49750 [shape=box,label="(49750)\nLoops: 8, 7\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n49749 [shape=box,label="(49749)\nLoops: 8, 7\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n49748 [shape=box,label="(49748)\nLoops: 8, 7\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n49747 [shape=box,label="(49747)\nLoops: 8, 7\nvar alphaFormat = @:exhaustive alphaFormat\n@:cond-branch alphaFormat"];
n49746 [shape=box,label="(49746)\nLoops: 8, 7"];
n49745 [shape=box,label="(49745)\nLoops: 8, 7"];
n49744 [shape=box,label="(49744)\nLoops: 8, 7"];
n49743 [shape=box,label="(49743)\nLoops: 8, 7"];
n49742 [shape=box,label="(49742)\nLoops: 8, 7\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar r = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar g = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar b = cast this[idx]\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast cast cast sourcePixel & cast 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49741 [shape=box,label="(49741)\nLoops: 8, 7\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast cast cast sourcePixel & cast 255)"];
n49740 [shape=box,label="(49740)\nLoops: 8, 7\n@:cond-branch tmp"];
n49739 [shape=box,label="(49739)\nLoops: 8, 7\ntmp = false"];
n49738 [shape=box,label="(49738)\nLoops: 8, 7\ntmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 255"];
n49737 [shape=box,label="(49737)\nLoops: 8, 7\nvar tmp\nvar tmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 0\n@:cond-branch tmp"];
n49736 [shape=box,label="(49736)\nLoops: 8, 7\nvar sourcePremultiplied = sourcePremultiplied\n@:cond-branch sourcePremultiplied"];
n49735 [shape=box,label="(49735)\nLoops: 8, 7\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49734 [shape=box,label="(49734)\nLoops: 8, 7\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49733 [shape=box,label="(49733)\nLoops: 8, 7\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49732 [shape=box,label="(49732)\nLoops: 8, 7\nvar sourceFormat = @:exhaustive sourceFormat\n@:cond-branch sourceFormat"];
n49731 [shape=box,label="(49731)\nLoops: 8, 7\n`3 = `3 + 1\nvar x = `3 - 1"];
n49730 [shape=box,label="(49730)\nLoops: 8, 7\nbreak"];
n49729 [shape=box,label="(49729)\nLoops: 8, 7\nvar tmp = ! ((`3 < `2))\n@:cond-branch tmp"];
n49728 [shape=box,label="<loop-head>
(49728)\nLoops: 8, 7"];
n49727 [shape=box,label="(49727)\nLoops: 7\nwhile ((true)) @:block 49729"];
n49726 [shape=box,label="(49726)\nLoops: 7\nvar `3 = 0\nvar `2 = destView.width"];
n49725 [shape=box,label="(49725)\nLoops: 7\n`1 = `1 + 1\nvar y = `1 - 1\nvar sourceView = sourceView.byteOffset\nvar sourcePosition = sourceView.stride * y\nsourcePosition = sourceView + sourcePosition\nvar destView = destView.byteOffset\nvar destPosition = destView.stride * y\ndestPosition = destView + destPosition\nvar alphaView = alphaView.byteOffset\nvar alphaPosition = alphaView.stride * y\nalphaPosition = alphaView + alphaPosition"];
n49724 [shape=box,label="(49724)\nLoops: 7\nbreak"];
n49723 [shape=box,label="(49723)\nLoops: 7\nvar tmp = ! ((`1 < `))\n@:cond-branch tmp"];
n49722 [shape=box,label="<loop-head>
(49722)\nLoops: 7"];
n49721 [shape=box,label="(49721)\nwhile ((true)) @:block 49723"];
n49720 [shape=box,label="(49720)"];
n49719 [shape=box,label="(49719)\nLoops: 5"];
n49718 [shape=box,label="(49718)\nLoops: 5"];
n49717 [shape=box,label="(49717)\nLoops: 6, 5\nsourcePosition = sourcePosition + 4\ndestPosition = destPosition + 4\nalphaPosition = alphaPosition + 4"];
n49716 [shape=box,label="(49716)\nLoops: 6, 5"];
n49715 [shape=box,label="(49715)\nLoops: 6, 5"];
n49714 [shape=box,label="(49714)\nLoops: 6, 5\ncast destData[destPosition] = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast destPixel & cast 255"];
n49713 [shape=box,label="(49713)\nLoops: 6, 5\ncast destData[destPosition] = cast cast cast cast cast destPixel & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255"];
n49712 [shape=box,label="(49712)\nLoops: 6, 5\ncast destData[destPosition] = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast destPixel & cast 255"];
n49711 [shape=box,label="(49711)\nLoops: 6, 5\nvar destFormat = @:exhaustive destFormat\n@:cond-branch destFormat"];
n49710 [shape=box,label="(49710)\nLoops: 6, 5"];
n49709 [shape=box,label="(49709)\nLoops: 6, 5"];
n49708 [shape=box,label="(49708)\nLoops: 6, 5"];
n49707 [shape=box,label="(49707)\nLoops: 6, 5\nvar r = (cast cast cast cast cast cast cast cast destPixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar r = r >> 16\nvar g = (cast cast cast cast cast cast cast cast destPixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar g = g >> 16\nvar b = (cast cast cast cast cast cast cast cast destPixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar b = b >> 16\nvar destPixel = r & 255\nvar destPixel = destPixel << 24\nvar destPixel = g & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = b & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49706 [shape=box,label="(49706)\nLoops: 6, 5\nvar this = lime.math._RGBA.RGBA_Impl_.__alpha16\nvar tmp = cast this[cast cast cast cast cast cast destPixel & cast 255]\nlime.math._RGBA.RGBA_Impl_.a16 = tmp"];
n49705 [shape=box,label="(49705)\nLoops: 6, 5"];
n49704 [shape=box,label="(49704)\nLoops: 6, 5\ndestPixel = 0"];
n49703 [shape=box,label="(49703)\nLoops: 6, 5\nvar tmp = (cast cast cast cast cast cast destPixel & cast 255) != 255\n@:cond-branch tmp"];
n49702 [shape=box,label="(49702)\nLoops: 6, 5\nvar tmp = cast cast cast destPixel != 0\n@:cond-branch tmp"];
n49701 [shape=box,label="(49701)\nLoops: 6, 5\nvar tmp = (cast cast cast cast cast cast destPixel & cast 255) == 0\n@:cond-branch tmp"];
n49700 [shape=box,label="(49700)\nLoops: 6, 5\nvar destPremultiplied = destPremultiplied\n@:cond-branch destPremultiplied"];
n49699 [shape=box,label="(49699)\nLoops: 6, 5"];
n49698 [shape=box,label="(49698)\nLoops: 6, 5\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = blendAlpha * 255.0\nvar idx = Math.round(idx)\nvar value = cast this[idx]\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = value & 255\ndestPixel = destPixel | destPixel"];
n49697 [shape=box,label="(49697)\nLoops: 6, 5"];
n49696 [shape=box,label="(49696)\nLoops: 6, 5\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast sourcePixel >>> 8 & cast 255) * sourceAlpha\nvar idx = (cast cast cast cast cast cast destPixel >>> 8 & cast 255) * destAlpha\nvar idx = idx * oneMinusSourceAlpha\nvar idx = idx + idx\nvar idx = idx / blendAlpha\nvar idx = Math.round(idx)\nvar value = cast this[idx]\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = value & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49695 [shape=box,label="(49695)\nLoops: 6, 5"];
n49694 [shape=box,label="(49694)\nLoops: 6, 5\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast sourcePixel >>> 16 & cast 255) * sourceAlpha\nvar idx = (cast cast cast cast cast cast destPixel >>> 16 & cast 255) * destAlpha\nvar idx = idx * oneMinusSourceAlpha\nvar idx = idx + idx\nvar idx = idx / blendAlpha\nvar idx = Math.round(idx)\nvar value = cast this[idx]\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = value & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49693 [shape=box,label="(49693)\nLoops: 6, 5"];
n49692 [shape=box,label="(49692)\nLoops: 6, 5\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast sourcePixel >>> 24 & cast 255) * sourceAlpha\nvar idx = (cast cast cast cast cast cast destPixel >>> 24 & cast 255) * destAlpha\nvar idx = idx * oneMinusSourceAlpha\nvar idx = idx + idx\nvar idx = idx / blendAlpha\nvar idx = Math.round(idx)\nvar value = cast this[idx]\nvar destPixel = value & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49691 [shape=box,label="(49691)\nLoops: 6, 5\ndestAlpha = (cast cast cast cast destPixel & cast 255) / 255.0\noneMinusSourceAlpha = 1 - sourceAlpha\nvar blendAlpha = destAlpha * oneMinusSourceAlpha\nblendAlpha = sourceAlpha + blendAlpha"];
n49690 [shape=box,label="(49690)\nLoops: 6, 5\nvar sourceAlpha = (cast cast cast cast alphaPixel & cast 255) / 255.0\nvar sourceAlpha = (cast cast cast cast sourcePixel & cast 255) / 255.0\nsourceAlpha = sourceAlpha * sourceAlpha\nvar tmp = sourceAlpha > 0\n@:cond-branch tmp"];
n49689 [shape=box,label="(49689)\nLoops: 6, 5"];
n49688 [shape=box,label="(49688)\nLoops: 6, 5"];
n49687 [shape=box,label="(49687)\nLoops: 6, 5"];
n49686 [shape=box,label="(49686)\nLoops: 6, 5\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n49685 [shape=box,label="(49685)\nLoops: 6, 5\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n49684 [shape=box,label="(49684)\nLoops: 6, 5\nvar alphaPixel = cast cast alphaData[alphaPosition] & 255\nvar alphaPixel = alphaPixel << 24\nvar alphaPixel = alphaPosition + 1\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 16\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 2\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nvar alphaPixel = alphaPixel << 8\nvar alphaPixel = alphaPixel | alphaPixel\nvar alphaPixel = alphaPosition + 3\nvar alphaPixel = cast cast alphaData[alphaPixel] & 255\nalphaPixel = alphaPixel | alphaPixel"];
n49683 [shape=box,label="(49683)\nLoops: 6, 5\nvar alphaFormat = @:exhaustive alphaFormat\n@:cond-branch alphaFormat"];
n49682 [shape=box,label="(49682)\nLoops: 6, 5"];
n49681 [shape=box,label="(49681)\nLoops: 6, 5"];
n49680 [shape=box,label="(49680)\nLoops: 6, 5"];
n49679 [shape=box,label="(49679)\nLoops: 6, 5"];
n49678 [shape=box,label="(49678)\nLoops: 6, 5\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast destPixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar r = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast destPixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar g = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast destPixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar b = cast this[idx]\nvar destPixel = r & 255\nvar destPixel = destPixel << 24\nvar destPixel = g & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = b & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49677 [shape=box,label="(49677)\nLoops: 6, 5\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast cast cast destPixel & cast 255)"];
n49676 [shape=box,label="(49676)\nLoops: 6, 5\n@:cond-branch tmp"];
n49675 [shape=box,label="(49675)\nLoops: 6, 5\ntmp = false"];
n49674 [shape=box,label="(49674)\nLoops: 6, 5\ntmp = (cast cast cast cast cast cast destPixel & cast 255) != 255"];
n49673 [shape=box,label="(49673)\nLoops: 6, 5\nvar tmp\nvar tmp = (cast cast cast cast cast cast destPixel & cast 255) != 0\n@:cond-branch tmp"];
n49672 [shape=box,label="(49672)\nLoops: 6, 5\nvar destPremultiplied = destPremultiplied\n@:cond-branch destPremultiplied"];
n49671 [shape=box,label="(49671)\nLoops: 6, 5\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast destData[destPosition] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\ndestPixel = destPixel | destPixel"];
n49670 [shape=box,label="(49670)\nLoops: 6, 5\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast destData[destPosition] & 255\ndestPixel = destPixel | destPixel"];
n49669 [shape=box,label="(49669)\nLoops: 6, 5\nvar destPixel = cast cast destData[destPosition] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\ndestPixel = destPixel | destPixel"];
n49668 [shape=box,label="(49668)\nLoops: 6, 5\nvar destFormat = @:exhaustive destFormat\n@:cond-branch destFormat"];
n49667 [shape=box,label="(49667)\nLoops: 6, 5"];
n49666 [shape=box,label="(49666)\nLoops: 6, 5"];
n49665 [shape=box,label="(49665)\nLoops: 6, 5"];
n49664 [shape=box,label="(49664)\nLoops: 6, 5"];
n49663 [shape=box,label="(49663)\nLoops: 6, 5\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar r = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar g = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar b = cast this[idx]\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast cast cast sourcePixel & cast 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49662 [shape=box,label="(49662)\nLoops: 6, 5\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast cast cast sourcePixel & cast 255)"];
n49661 [shape=box,label="(49661)\nLoops: 6, 5\n@:cond-branch tmp"];
n49660 [shape=box,label="(49660)\nLoops: 6, 5\ntmp = false"];
n49659 [shape=box,label="(49659)\nLoops: 6, 5\ntmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 255"];
n49658 [shape=box,label="(49658)\nLoops: 6, 5\nvar tmp\nvar tmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 0\n@:cond-branch tmp"];
n49657 [shape=box,label="(49657)\nLoops: 6, 5\nvar sourcePremultiplied = sourcePremultiplied\n@:cond-branch sourcePremultiplied"];
n49656 [shape=box,label="(49656)\nLoops: 6, 5\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49655 [shape=box,label="(49655)\nLoops: 6, 5\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49654 [shape=box,label="(49654)\nLoops: 6, 5\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49653 [shape=box,label="(49653)\nLoops: 6, 5\nvar sourceFormat = @:exhaustive sourceFormat\n@:cond-branch sourceFormat"];
n49652 [shape=box,label="(49652)\nLoops: 6, 5\n`3 = `3 + 1\nvar x = `3 - 1"];
n49651 [shape=box,label="(49651)\nLoops: 6, 5\nbreak"];
n49650 [shape=box,label="(49650)\nLoops: 6, 5\nvar tmp = ! ((`3 < `2))\n@:cond-branch tmp"];
n49649 [shape=box,label="<loop-head>
(49649)\nLoops: 6, 5"];
n49648 [shape=box,label="(49648)\nLoops: 5\nwhile ((true)) @:block 49650"];
n49647 [shape=box,label="(49647)\nLoops: 5\nvar `3 = 0\nvar `2 = destView.width"];
n49646 [shape=box,label="(49646)\nLoops: 5\n`1 = `1 + 1\nvar y = `1 - 1\nvar sourceView = sourceView.byteOffset\nvar sourcePosition = sourceView.stride * y\nsourcePosition = sourceView + sourcePosition\nvar destView = destView.byteOffset\nvar destPosition = destView.stride * y\ndestPosition = destView + destPosition\nvar alphaView = alphaView.byteOffset\nvar alphaPosition = alphaView.stride * y\nalphaPosition = alphaView + alphaPosition"];
n49645 [shape=box,label="(49645)\nLoops: 5\nbreak"];
n49644 [shape=box,label="(49644)\nLoops: 5\nvar tmp = ! ((`1 < `))\n@:cond-branch tmp"];
n49643 [shape=box,label="<loop-head>
(49643)\nLoops: 5"];
n49642 [shape=box,label="(49642)\nwhile ((true)) @:block 49644"];
n49641 [shape=box,label="(49641)\nvar `1 = 0\nvar ` = destView.height"];
n49640 [shape=box,label="(49640)\nvar `1 = 0\nvar ` = destView.height"];
n49639 [shape=box,label="(49639)\nvar alphaData = alphaImage.buffer.data\nvar alphaFormat = alphaImage.buffer.format\nvar alphaPosition\nvar alphaPixel\nvar alphaView = new lime._internal.graphics._ImageDataUtil.ImageDataView(alphaImage, new lime.math.Rectangle(alphaPoint.x, alphaPoint.y, alphaImage.width, alphaImage.height))\nalphaView.offset(sourceView.x, sourceView.y)\nvar x = destPoint.x\nvar tmp = cast x | 0\nvar x = destPoint.y\nvar tmp = cast x | 0\ndestView.clip(tmp, tmp, alphaView.width, alphaView.height)\nvar blend = blend\n@:cond-branch blend"];
n49638 [shape=box,label="(49638)\nalphaPoint = new lime.math.Vector2()"];
n49637 [shape=box,label="(49637)"];
n49636 [shape=box,label="(49636)"];
n49635 [shape=box,label="(49635)"];
n49634 [shape=box,label="(49634)\nLoops: 3"];
n49633 [shape=box,label="(49633)\nLoops: 3"];
n49632 [shape=box,label="(49632)\nLoops: 4, 3\nsourcePosition = sourcePosition + 4\ndestPosition = destPosition + 4"];
n49631 [shape=box,label="(49631)\nLoops: 4, 3"];
n49630 [shape=box,label="(49630)\nLoops: 4, 3\ncast destData[destPosition] = cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast sourcePixel & cast 255"];
n49629 [shape=box,label="(49629)\nLoops: 4, 3\ncast destData[destPosition] = cast cast cast cast cast sourcePixel & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255"];
n49628 [shape=box,label="(49628)\nLoops: 4, 3\ncast destData[destPosition] = cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast sourcePixel & cast 255"];
n49627 [shape=box,label="(49627)\nLoops: 4, 3\nvar destFormat = @:exhaustive destFormat\n@:cond-branch destFormat"];
n49626 [shape=box,label="(49626)\nLoops: 4, 3"];
n49625 [shape=box,label="(49625)\nLoops: 4, 3"];
n49624 [shape=box,label="(49624)\nLoops: 4, 3"];
n49623 [shape=box,label="(49623)\nLoops: 4, 3\nvar r = (cast cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar r = r >> 16\nvar g = (cast cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar g = g >> 16\nvar b = (cast cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar b = b >> 16\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast cast cast sourcePixel & cast 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49622 [shape=box,label="(49622)\nLoops: 4, 3\nvar this = lime.math._RGBA.RGBA_Impl_.__alpha16\nvar tmp = cast this[cast cast cast cast cast cast sourcePixel & cast 255]\nlime.math._RGBA.RGBA_Impl_.a16 = tmp"];
n49621 [shape=box,label="(49621)\nLoops: 4, 3"];
n49620 [shape=box,label="(49620)\nLoops: 4, 3\nsourcePixel = 0"];
n49619 [shape=box,label="(49619)\nLoops: 4, 3\nvar tmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 255\n@:cond-branch tmp"];
n49618 [shape=box,label="(49618)\nLoops: 4, 3\nvar tmp = cast cast cast sourcePixel != 0\n@:cond-branch tmp"];
n49617 [shape=box,label="(49617)\nLoops: 4, 3\nvar tmp = (cast cast cast cast cast cast sourcePixel & cast 255) == 0\n@:cond-branch tmp"];
n49616 [shape=box,label="(49616)\nLoops: 4, 3\nvar destPremultiplied = destPremultiplied\n@:cond-branch destPremultiplied"];
n49615 [shape=box,label="(49615)\nLoops: 4, 3"];
n49614 [shape=box,label="(49614)\nLoops: 4, 3"];
n49613 [shape=box,label="(49613)\nLoops: 4, 3"];
n49612 [shape=box,label="(49612)\nLoops: 4, 3"];
n49611 [shape=box,label="(49611)\nLoops: 4, 3\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar r = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar g = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar b = cast this[idx]\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast cast cast sourcePixel & cast 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49610 [shape=box,label="(49610)\nLoops: 4, 3\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast cast cast sourcePixel & cast 255)"];
n49609 [shape=box,label="(49609)\nLoops: 4, 3\n@:cond-branch tmp"];
n49608 [shape=box,label="(49608)\nLoops: 4, 3\ntmp = false"];
n49607 [shape=box,label="(49607)\nLoops: 4, 3\ntmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 255"];
n49606 [shape=box,label="(49606)\nLoops: 4, 3\nvar tmp\nvar tmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 0\n@:cond-branch tmp"];
n49605 [shape=box,label="(49605)\nLoops: 4, 3\nvar sourcePremultiplied = sourcePremultiplied\n@:cond-branch sourcePremultiplied"];
n49604 [shape=box,label="(49604)\nLoops: 4, 3\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49603 [shape=box,label="(49603)\nLoops: 4, 3\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49602 [shape=box,label="(49602)\nLoops: 4, 3\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49601 [shape=box,label="(49601)\nLoops: 4, 3\nvar sourceFormat = @:exhaustive sourceFormat\n@:cond-branch sourceFormat"];
n49600 [shape=box,label="(49600)\nLoops: 4, 3\n`3 = `3 + 1\nvar x = `3 - 1"];
n49599 [shape=box,label="(49599)\nLoops: 4, 3\nbreak"];
n49598 [shape=box,label="(49598)\nLoops: 4, 3\nvar tmp = ! ((`3 < `2))\n@:cond-branch tmp"];
n49597 [shape=box,label="<loop-head>
(49597)\nLoops: 4, 3"];
n49596 [shape=box,label="(49596)\nLoops: 3\nwhile ((true)) @:block 49598"];
n49595 [shape=box,label="(49595)\nLoops: 3\nvar `3 = 0\nvar `2 = destView.width"];
n49594 [shape=box,label="(49594)\nLoops: 3\n`1 = `1 + 1\nvar y = `1 - 1\nvar sourceView = sourceView.byteOffset\nvar sourcePosition = sourceView.stride * y\nsourcePosition = sourceView + sourcePosition\nvar destView = destView.byteOffset\nvar destPosition = destView.stride * y\ndestPosition = destView + destPosition"];
n49593 [shape=box,label="(49593)\nLoops: 3\nbreak"];
n49592 [shape=box,label="(49592)\nLoops: 3\nvar tmp = ! ((`1 < `))\n@:cond-branch tmp"];
n49591 [shape=box,label="<loop-head>
(49591)\nLoops: 3"];
n49590 [shape=box,label="(49590)\nwhile ((true)) @:block 49592"];
n49589 [shape=box,label="(49589)"];
n49588 [shape=box,label="(49588)\nLoops: 2\n`1 = `1 + 1\nvar y = `1 - 1\nvar sourceView = sourceView.byteOffset\nvar sourcePosition = sourceView.stride * y\nsourcePosition = sourceView + sourcePosition\nvar destView = destView.byteOffset\nvar destPosition = destView.stride * y\ndestPosition = destView + destPosition\nvar tmp = destView.width * destBytesPerPixel\nvar tmp = sourcePosition + tmp\nvar tmp = sourceData.subarray(sourcePosition, tmp)\ndestData.set(tmp, destPosition)"];
n49587 [shape=box,label="(49587)\nLoops: 2\nbreak"];
n49586 [shape=box,label="(49586)\nLoops: 2\nvar tmp = ! ((`1 < `))\n@:cond-branch tmp"];
n49585 [shape=box,label="<loop-head>
(49585)\nLoops: 2"];
n49584 [shape=box,label="(49584)\nwhile ((true)) @:block 49586"];
n49583 [shape=box,label="(49583)\nvar `1 = 0\nvar ` = destView.height"];
n49582 [shape=box,label="(49582)\nvar `1 = 0\nvar ` = destView.height"];
n49581 [shape=box,label="(49581)\n@:cond-branch tmp"];
n49580 [shape=box,label="(49580)\ntmp = false"];
n49579 [shape=box,label="(49579)\ntmp = sourceBytesPerPixel == destBytesPerPixel"];
n49578 [shape=box,label="(49578)\n@:cond-branch tmp"];
n49577 [shape=box,label="(49577)\ntmp = false"];
n49576 [shape=box,label="(49576)\ntmp = sourcePremultiplied == destPremultiplied"];
n49575 [shape=box,label="(49575)"];
n49574 [shape=box,label="(49574)\nLoops: 0"];
n49573 [shape=box,label="(49573)\nLoops: 0"];
n49572 [shape=box,label="(49572)\nLoops: 1, 0\nsourcePosition = sourcePosition + 4\ndestPosition = destPosition + 4"];
n49571 [shape=box,label="(49571)\nLoops: 1, 0"];
n49570 [shape=box,label="(49570)\nLoops: 1, 0\ncast destData[destPosition] = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast destPixel & cast 255"];
n49569 [shape=box,label="(49569)\nLoops: 1, 0\ncast destData[destPosition] = cast cast cast cast cast destPixel & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255"];
n49568 [shape=box,label="(49568)\nLoops: 1, 0\ncast destData[destPosition] = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255\nvar tmp = destPosition + 1\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255\nvar tmp = destPosition + 2\ncast destData[tmp] = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255\nvar tmp = destPosition + 3\ncast destData[tmp] = cast cast cast cast cast destPixel & cast 255"];
n49567 [shape=box,label="(49567)\nLoops: 1, 0\nvar destFormat = @:exhaustive destFormat\n@:cond-branch destFormat"];
n49566 [shape=box,label="(49566)\nLoops: 1, 0"];
n49565 [shape=box,label="(49565)\nLoops: 1, 0"];
n49564 [shape=box,label="(49564)\nLoops: 1, 0"];
n49563 [shape=box,label="(49563)\nLoops: 1, 0\nvar r = (cast cast cast cast cast cast cast cast destPixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar r = r >> 16\nvar g = (cast cast cast cast cast cast cast cast destPixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar g = g >> 16\nvar b = (cast cast cast cast cast cast cast cast destPixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.a16\nvar b = b >> 16\nvar destPixel = r & 255\nvar destPixel = destPixel << 24\nvar destPixel = g & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = b & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49562 [shape=box,label="(49562)\nLoops: 1, 0\nvar this = lime.math._RGBA.RGBA_Impl_.__alpha16\nvar tmp = cast this[cast cast cast cast cast cast destPixel & cast 255]\nlime.math._RGBA.RGBA_Impl_.a16 = tmp"];
n49561 [shape=box,label="(49561)\nLoops: 1, 0"];
n49560 [shape=box,label="(49560)\nLoops: 1, 0\ndestPixel = 0"];
n49559 [shape=box,label="(49559)\nLoops: 1, 0\nvar tmp = (cast cast cast cast cast cast destPixel & cast 255) != 255\n@:cond-branch tmp"];
n49558 [shape=box,label="(49558)\nLoops: 1, 0\nvar tmp = cast cast cast destPixel != 0\n@:cond-branch tmp"];
n49557 [shape=box,label="(49557)\nLoops: 1, 0\nvar tmp = (cast cast cast cast cast cast destPixel & cast 255) == 0\n@:cond-branch tmp"];
n49556 [shape=box,label="(49556)\nLoops: 1, 0\nvar destPremultiplied = destPremultiplied\n@:cond-branch destPremultiplied"];
n49555 [shape=box,label="(49555)\nLoops: 1, 0"];
n49554 [shape=box,label="(49554)\nLoops: 1, 0"];
n49553 [shape=box,label="(49553)\nLoops: 1, 0\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = blendAlpha * 255.0\nvar idx = Math.round(idx)\nvar value = cast this[idx]\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = value & 255\ndestPixel = destPixel | destPixel"];
n49552 [shape=box,label="(49552)\nLoops: 1, 0"];
n49551 [shape=box,label="(49551)\nLoops: 1, 0\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast sourcePixel >>> 8 & cast 255) * sourceAlpha\nvar idx = (cast cast cast cast cast cast destPixel >>> 8 & cast 255) * destAlpha\nvar idx = idx * oneMinusSourceAlpha\nvar idx = idx + idx\nvar idx = idx / blendAlpha\nvar idx = Math.round(idx)\nvar value = cast this[idx]\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = value & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49550 [shape=box,label="(49550)\nLoops: 1, 0"];
n49549 [shape=box,label="(49549)\nLoops: 1, 0\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast sourcePixel >>> 16 & cast 255) * sourceAlpha\nvar idx = (cast cast cast cast cast cast destPixel >>> 16 & cast 255) * destAlpha\nvar idx = idx * oneMinusSourceAlpha\nvar idx = idx + idx\nvar idx = idx / blendAlpha\nvar idx = Math.round(idx)\nvar value = cast this[idx]\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 24 & cast 255 & 255\nvar destPixel = destPixel << 24\nvar destPixel = value & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49548 [shape=box,label="(49548)\nLoops: 1, 0"];
n49547 [shape=box,label="(49547)\nLoops: 1, 0\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast sourcePixel >>> 24 & cast 255) * sourceAlpha\nvar idx = (cast cast cast cast cast cast destPixel >>> 24 & cast 255) * destAlpha\nvar idx = idx * oneMinusSourceAlpha\nvar idx = idx + idx\nvar idx = idx / blendAlpha\nvar idx = Math.round(idx)\nvar value = cast this[idx]\nvar destPixel = value & 255\nvar destPixel = destPixel << 24\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 16 & cast 255 & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast cast destPixel >>> 8 & cast 255 & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49546 [shape=box,label="(49546)\nLoops: 1, 0"];
n49545 [shape=box,label="(49545)\nLoops: 1, 0\ndestPixel = 0"];
n49544 [shape=box,label="(49544)\nLoops: 1, 0\nsourceAlpha = (cast cast cast cast sourcePixel & cast 255) / 255.0\ndestAlpha = (cast cast cast cast destPixel & cast 255) / 255.0\noneMinusSourceAlpha = 1 - sourceAlpha\nvar blendAlpha = destAlpha * oneMinusSourceAlpha\nblendAlpha = sourceAlpha + blendAlpha\nvar tmp = blendAlpha == 0\n@:cond-branch tmp"];
n49543 [shape=box,label="(49543)\nLoops: 1, 0"];
n49542 [shape=box,label="(49542)\nLoops: 1, 0"];
n49541 [shape=box,label="(49541)\nLoops: 1, 0"];
n49540 [shape=box,label="(49540)\nLoops: 1, 0\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast destPixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar r = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast destPixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar g = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast destPixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar b = cast this[idx]\nvar destPixel = r & 255\nvar destPixel = destPixel << 24\nvar destPixel = g & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = b & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast cast cast cast cast destPixel & cast 255 & 255\ndestPixel = destPixel | destPixel"];
n49539 [shape=box,label="(49539)\nLoops: 1, 0\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast cast cast destPixel & cast 255)"];
n49538 [shape=box,label="(49538)\nLoops: 1, 0\n@:cond-branch tmp"];
n49537 [shape=box,label="(49537)\nLoops: 1, 0\ntmp = false"];
n49536 [shape=box,label="(49536)\nLoops: 1, 0\ntmp = (cast cast cast cast cast cast destPixel & cast 255) != 255"];
n49535 [shape=box,label="(49535)\nLoops: 1, 0\nvar tmp\nvar tmp = (cast cast cast cast cast cast destPixel & cast 255) != 0\n@:cond-branch tmp"];
n49534 [shape=box,label="(49534)\nLoops: 1, 0\nvar destPremultiplied = destPremultiplied\n@:cond-branch destPremultiplied"];
n49533 [shape=box,label="(49533)\nLoops: 1, 0\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast destData[destPosition] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\ndestPixel = destPixel | destPixel"];
n49532 [shape=box,label="(49532)\nLoops: 1, 0\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = cast cast destData[destPosition] & 255\ndestPixel = destPixel | destPixel"];
n49531 [shape=box,label="(49531)\nLoops: 1, 0\nvar destPixel = cast cast destData[destPosition] & 255\nvar destPixel = destPixel << 24\nvar destPixel = destPosition + 1\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 16\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 2\nvar destPixel = cast cast destData[destPixel] & 255\nvar destPixel = destPixel << 8\nvar destPixel = destPixel | destPixel\nvar destPixel = destPosition + 3\nvar destPixel = cast cast destData[destPixel] & 255\ndestPixel = destPixel | destPixel"];
n49530 [shape=box,label="(49530)\nLoops: 1, 0\nvar destFormat = @:exhaustive destFormat\n@:cond-branch destFormat"];
n49529 [shape=box,label="(49529)\nLoops: 1, 0"];
n49528 [shape=box,label="(49528)\nLoops: 1, 0"];
n49527 [shape=box,label="(49527)\nLoops: 1, 0"];
n49526 [shape=box,label="(49526)\nLoops: 1, 0"];
n49525 [shape=box,label="(49525)\nLoops: 1, 0\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 24 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar r = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 16 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar g = cast this[idx]\nvar this = lime.math._RGBA.RGBA_Impl_.__clamp\nvar idx = (cast cast cast cast cast cast cast cast sourcePixel >>> 8 & cast 255) * lime.math._RGBA.RGBA_Impl_.unmult\nvar idx = Math.round(idx)\nvar b = cast this[idx]\nvar sourcePixel = r & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = g & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = b & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast cast cast cast cast sourcePixel & cast 255 & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49524 [shape=box,label="(49524)\nLoops: 1, 0\nlime.math._RGBA.RGBA_Impl_.unmult = 255.0 / (cast cast cast cast cast cast sourcePixel & cast 255)"];
n49523 [shape=box,label="(49523)\nLoops: 1, 0\n@:cond-branch tmp"];
n49522 [shape=box,label="(49522)\nLoops: 1, 0\ntmp = false"];
n49521 [shape=box,label="(49521)\nLoops: 1, 0\ntmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 255"];
n49520 [shape=box,label="(49520)\nLoops: 1, 0\nvar tmp\nvar tmp = (cast cast cast cast cast cast sourcePixel & cast 255) != 0\n@:cond-branch tmp"];
n49519 [shape=box,label="(49519)\nLoops: 1, 0\nvar sourcePremultiplied = sourcePremultiplied\n@:cond-branch sourcePremultiplied"];
n49518 [shape=box,label="(49518)\nLoops: 1, 0\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49517 [shape=box,label="(49517)\nLoops: 1, 0\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49516 [shape=box,label="(49516)\nLoops: 1, 0\nvar sourcePixel = cast cast sourceData[sourcePosition] & 255\nvar sourcePixel = sourcePixel << 24\nvar sourcePixel = sourcePosition + 1\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 16\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 2\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nvar sourcePixel = sourcePixel << 8\nvar sourcePixel = sourcePixel | sourcePixel\nvar sourcePixel = sourcePosition + 3\nvar sourcePixel = cast cast sourceData[sourcePixel] & 255\nsourcePixel = sourcePixel | sourcePixel"];
n49515 [shape=box,label="(49515)\nLoops: 1, 0\nvar sourceFormat = @:exhaustive sourceFormat\n@:cond-branch sourceFormat"];
n49514 [shape=box,label="(49514)\nLoops: 1, 0\n`3 = `3 + 1\nvar x = `3 - 1"];
n49513 [shape=box,label="(49513)\nLoops: 1, 0\nbreak"];
n49512 [shape=box,label="(49512)\nLoops: 1, 0\nvar tmp = ! ((`3 < `2))\n@:cond-branch tmp"];
n49511 [shape=box,label="<loop-head>
(49511)\nLoops: 1, 0"];
n49510 [shape=box,label="(49510)\nLoops: 0\nwhile ((true)) @:block 49512"];
n49509 [shape=box,label="(49509)\nLoops: 0\nvar `3 = 0\nvar `2 = destView.width"];
n49508 [shape=box,label="(49508)\nLoops: 0\n`1 = `1 + 1\nvar y = `1 - 1\nvar sourceView = sourceView.byteOffset\nvar sourcePosition = sourceView.stride * y\nsourcePosition = sourceView + sourcePosition\nvar destView = destView.byteOffset\nvar destPosition = destView.stride * y\ndestPosition = destView + destPosition"];
n49507 [shape=box,label="(49507)\nLoops: 0\nbreak"];
n49506 [shape=box,label="(49506)\nLoops: 0\nvar tmp = ! ((`1 < `))\n@:cond-branch tmp"];
n49505 [shape=box,label="<loop-head>
(49505)\nLoops: 0"];
n49504 [shape=box,label="(49504)\nwhile ((true)) @:block 49506"];
n49503 [shape=box,label="(49503)\nvar tmp\nvar tmp\nvar tmp = sourceFormat == destFormat\n@:cond-branch tmp"];
n49502 [shape=box,label="(49502)\nvar `1 = 0\nvar ` = destView.height"];
n49501 [shape=box,label="(49501)\nvar tmp = alphaPoint == null\n@:cond-branch tmp"];
n49500 [shape=box,label="(49500)\nvar blend = blend\n@:cond-branch blend"];
n49499 [shape=box,label="(49499)\nvar tmp = ! useAlphaImage\n@:cond-branch tmp"];
n49498 [shape=box,label="(49498)"];
n49497 [shape=box,label="(49497)\nblend = false"];
n49496 [shape=box,label="(49496)\nblend = ! image.get_transparent()"];
n49495 [shape=box,label="(49495)\nblend = true"];
n49494 [shape=box,label="(49494)\nvar useAlphaImage = useAlphaImage\n@:cond-branch useAlphaImage"];
n49493 [shape=box,label="(49493)\nvar blend\nvar blend = ! mergeAlpha\n@:cond-branch blend"];
n49492 [shape=box,label="(49492)\nuseAlphaImage = false"];
n49491 [shape=box,label="(49491)\nuseAlphaImage = alphaImage.get_transparent()"];
n49490 [shape=box,label="(49490)\nvar sourceView = new lime._internal.graphics._ImageDataUtil.ImageDataView(sourceImage, sourceRect)\nvar destRect = new lime.math.Rectangle(destPoint.x, destPoint.y, sourceView.width, sourceView.height)\nvar destView = new lime._internal.graphics._ImageDataUtil.ImageDataView(image, destRect)\nvar sourceFormat = sourceImage.buffer.format\nvar destFormat = image.buffer.format\nvar sourcePosition\nvar destPosition\nvar sourceAlpha\nvar destAlpha\nvar oneMinusSourceAlpha\nvar blendAlpha\nvar sourcePixel\nvar destPixel\nvar sourcePremultiplied = sourceImage.buffer.premultiplied\nvar destPremultiplied = image.buffer.premultiplied\nvar x = sourceImage.buffer.bitsPerPixel / 8\nvar sourceBytesPerPixel = cast x | 0\nvar x = image.buffer.bitsPerPixel / 8\nvar destBytesPerPixel = cast x | 0\nvar useAlphaImage\nvar useAlphaImage = alphaImage != null\n@:cond-branch useAlphaImage"];
n49489 [shape=box,label="(49489)\nreturn"];
n49488 [shape=box,label="(49488)\n@:cond-branch tmp"];
n49487 [shape=box,label="(49487)\ntmp = true"];
n49486 [shape=box,label="(49486)\ntmp = destData == null"];
n49485 [shape=box,label="(49485)\nvar sourceData = sourceImage.buffer.data\nvar destData = image.buffer.data\nvar tmp\nvar tmp = ! sourceData == null\n@:cond-branch tmp"];
n49484 [shape=box,label="(49484)\nimage.buffer.data.set(sourceImage.buffer.data)"];
n49483 [shape=box,label="(49483)\n@:cond-branch tmp"];
n49482 [shape=box,label="(49482)\ntmp = false"];
n49481 [shape=box,label="(49481)\nvar tmp = image.get_format()\nvar tmp = sourceImage.get_format()\ntmp = tmp == tmp"];
n49480 [shape=box,label="(49480)\n@:cond-branch tmp"];
n49479 [shape=box,label="(49479)\ntmp = false"];
n49478 [shape=box,label="(49478)\ntmp = mergeAlpha == false"];
n49477 [shape=box,label="(49477)\n@:cond-branch tmp"];
n49476 [shape=box,label="(49476)\ntmp = false"];
n49475 [shape=box,label="(49475)\ntmp = alphaPoint == null"];
n49474 [shape=box,label="(49474)\n@:cond-branch tmp"];
n49473 [shape=box,label="(49473)\ntmp = false"];
n49472 [shape=box,label="(49472)\ntmp = alphaImage == null"];
n49471 [shape=box,label="(49471)\n@:cond-branch tmp"];
n49470 [shape=box,label="(49470)\ntmp = false"];
n49469 [shape=box,label="(49469)\ntmp = destPoint.y == 0"];
n49468 [shape=box,label="(49468)\n@:cond-branch tmp"];
n49467 [shape=box,label="(49467)\ntmp = false"];
n49466 [shape=box,label="(49466)\ntmp = destPoint.x == 0"];
n49465 [shape=box,label="(49465)\n@:cond-branch tmp"];
n49464 [shape=box,label="(49464)\ntmp = false"];
n49463 [shape=box,label="(49463)\ntmp = sourceRect.y == 0"];
n49462 [shape=box,label="(49462)\n@:cond-branch tmp"];
n49461 [shape=box,label="(49461)\ntmp = false"];
n49460 [shape=box,label="(49460)\ntmp = sourceRect.x == 0"];
n49459 [shape=box,label="(49459)\n@:cond-branch tmp"];
n49458 [shape=box,label="(49458)\ntmp = false"];
n49457 [shape=box,label="(49457)\ntmp = sourceRect.height == sourceImage.height"];
n49456 [shape=box,label="(49456)\n@:cond-branch tmp"];
n49455 [shape=box,label="(49455)\ntmp = false"];
n49454 [shape=box,label="(49454)\ntmp = sourceRect.width == sourceImage.width"];
n49453 [shape=box,label="(49453)\n@:cond-branch tmp"];
n49452 [shape=box,label="(49452)\ntmp = false"];
n49451 [shape=box,label="(49451)\ntmp = image.height == sourceImage.height"];
n49450 [shape=box,label="<function-end>
(49450)"];
n49449 [shape=box,label="<function-begin>
(49449)\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp\nvar tmp = image.width == sourceImage.width\n@:cond-branch tmp"];
n1 [shape=box,label="<root>
(1)"];
n1 -> n49449[label="function"];
}
